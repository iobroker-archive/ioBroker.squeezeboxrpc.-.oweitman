{
  "version": 3,
  "sources": ["../js/sbClasses.js", "../../../package.json", "../js/textImage.js", "../js/squeezeboxrpc.js", "../js/date.format.js", "../js/bundle.js"],
  "sourcesContent": ["'use strict';\n\n/**\n * This function takes a request and returns an appropriate class that can parse the response.\n * The class is determined by the content of the response.\n *\n * @param request - The request object.\n * @returns The class that can parse the response.\n */\nexport function parseRequestFactory(request) {\n    console.log(`parseRequestFactory`);\n    let result = request.result;\n    if (result.albums_loop) {\n        return new Albums(request);\n    }\n    if (result.artists_loop) {\n        return new Artists(request);\n    }\n    if (result.genres_loop) {\n        return new Genres(request);\n    }\n    if (result.works_loop) {\n        return new Works(request);\n    }\n    if (result.years_loop) {\n        return new Years(request);\n    }\n    if (result.item_loop) {\n        return new Items(request);\n    }\n    if (result.titles_loop) {\n        return new Tracks(request);\n    }\n    if (result.playlisttracks_loop) {\n        return new PlaylistTracks(request);\n    }\n    if (result.playlists_loop) {\n        return new Playlists(request);\n    }\n    //specialHandling\n    let requestCommand = request.params[1][0];\n    if (requestCommand === 'selectVirtualLibrary' && !result.item_loop) {\n        return new Items(request);\n    }\n}\nclass Albums {\n    constructor(request) {\n        console.log(`Albums`);\n        this.albums = this.parseRequest(request);\n    }\n    parseRequest(request) {\n        let result = request.result;\n        if (result.albums_loop) {\n            let albums = result.albums_loop;\n            return albums.map(item => {\n                return new Album(item, request);\n            });\n        }\n    }\n    getMenuItems() {\n        return this.albums.map(item => item.getMenu());\n    }\n}\nclass Album {\n    constructor(request_item, request) {\n        this.parseRequest(request_item, request);\n    }\n    parseRequest(request_item, request) {\n        this.id = request_item.id || undefined;\n        this.performance = request_item.performance || undefined;\n        this.favorites_url = request_item.favorites_url || undefined;\n        this.favorites_title = request_item.favorites_title || undefined;\n        this.album = request_item.album || undefined;\n        this.year = request_item.year || undefined;\n        this.artwork_track_id = request_item.artwork_track_id || undefined;\n        this.compilation = request_item.compilation || undefined;\n        this.artist_id = request_item.artist_id || undefined;\n        this.artist = request_item.artist || undefined;\n        this.textkey = request_item.textkey || undefined;\n        let additionalPlayParams = [getParamsFromCommand(request.params[1], 'role_id:')];\n        this.actions = {\n            next: {\n                command: ['tracks'],\n                params: ['tags:distbhz1kyuAACGPSE', 'sort:tracknum', `album_id:${this.id}`],\n            },\n            play: {\n                command: ['playlistcontrol'],\n                params: [`cmd:load`, `album_id:${this.id}`, `performance:`, ...additionalPlayParams, `library_id:-1`],\n            },\n            add: {\n                command: ['playlistcontrol'],\n                params: [`cmd:add`, `album_id:${this.id}`, `performance:`],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: this.id,\n            title: `${this.artist} / ${this.album} ${this.year ? `(${this.year})` : ''}`,\n            image: `/music/${this.artwork_track_id}/cover_300x300_f`,\n            type: 'album',\n            item: this,\n            param: JSON.stringify(this.actions.next),\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\n\nclass Artists {\n    constructor(request) {\n        console.log(`Artists`);\n        this.artists = this.parseRequest(request);\n    }\n    parseRequest(request) {\n        let result = request.result;\n        if (result.artists_loop) {\n            let artists = result.artists_loop;\n            return artists.map(item => {\n                return new Artist(item, request);\n            });\n        }\n    }\n    getMenuItems() {\n        return this.artists.map(item => item.getMenu());\n    }\n}\nclass Artist {\n    constructor(request_item, request) {\n        this.parseRequest(request_item, request);\n    }\n    parseRequest(request_item, request) {\n        this.id = request_item.id || undefined;\n        this.artist = request_item.artist || undefined;\n        this.textkey = request_item.textkey || undefined;\n        this.favorites_url = request_item.favorites_url || undefined;\n        let additionalPlayParams = [getParamsFromCommand(request.params[1], 'role_id:')];\n        this.actions = {\n            next: {\n                command: ['albums'],\n                params: ['tags:aajlqswyKSSE', 'sort:yearalbum', `artist_id:${this.id}`],\n            },\n            play: {\n                command: ['playlistcontrol'],\n                params: [\n                    `cmd:load`,\n                    `role_id:ALBUMARTIST`,\n                    `artist_id:${this.id}`,\n                    `sort:yearalbum`,\n                    ...additionalPlayParams,\n                    `library_id:-1`,\n                ],\n            },\n            add: {\n                command: ['playlistcontrol'],\n                params: [`cmd:add`, `role_id:ALBUMARTIST`, `artist_id:${this.id}`, `sort:yearalbum`],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: this.id,\n            title: this.artist,\n            image: `/imageproxy/mai/artist/${this.id}/image_300x300_f`,\n            type: 'artist',\n            item: this,\n            param: JSON.stringify(this.actions.next),\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\n\nclass Genres {\n    constructor(request) {\n        console.log(`Genres`);\n        this.genres = this.parseRequest(request);\n    }\n    parseRequest(request) {\n        let result = request.result;\n        if (result.genres_loop) {\n            let genres = result.genres_loop;\n            return genres.map(item => {\n                return new Genre(item);\n            });\n        }\n    }\n    getMenuItems() {\n        return this.genres.map(item => item.getMenu());\n    }\n}\nclass Genre {\n    constructor(request_item) {\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.id || undefined;\n        this.genre = request_item.genre || undefined;\n        this.textkey = request_item.textkey || undefined;\n        this.favorites_url = request_item.favorites_url || undefined;\n        this.actions = {\n            next: {\n                command: ['tracks'],\n                params: [`genre_id:${request_item.id}`, 'tags:distbhz1kyuAACGPScelyE', 'msk-sort:yearalbumtrack:Album'],\n            },\n            play: {\n                command: ['playlistcontrol'],\n                params: [`cmd:load`, `genre_id:${this.id}`, `sort:album`, `library_id:-1`],\n            },\n            add: {\n                command: ['playlistcontrol'],\n                params: [`cmd:add`, `genre_id:${this.id}`, `sort:album`],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: this.id,\n            title: `${this.genre}`,\n            image: null,\n            type: 'genre',\n            item: this,\n            param: JSON.stringify(this.actions.next),\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\nclass Playlists {\n    constructor(request) {\n        console.log(`Playlists`);\n        this.playlists = this.parseRequest(request);\n    }\n    parseRequest(request) {\n        let result = request.result;\n        if (result.playlists_loop) {\n            let playlists = result.playlists_loop;\n            return playlists.map(item => {\n                return new Playlist(item);\n            });\n        }\n    }\n    getMenuItems() {\n        return this.playlists.map(item => item.getMenu());\n    }\n}\nclass Playlist {\n    constructor(request_item) {\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.id || undefined;\n        this.playlist = request_item.playlist || undefined;\n        this.url = request_item.url || undefined;\n        this.favorites_url = request_item.favorites_url || undefined;\n        this.textkey = request_item.textkey || undefined;\n        this.extid = request_item.extid || undefined;\n        this.remote = request_item.remote || undefined;\n        this.actions = {\n            next: {\n                command: ['playlists', 'tracks'],\n                params: [`playlist_id:${request_item.id}`, 'tags:distbhz1acelyAGKPS'],\n            },\n            play: {\n                command: ['playlistcontrol'],\n                params: [`cmd:load`, `playlist_id:${this.id}`, `performance:`],\n            },\n            add: {\n                command: ['playlistcontrol'],\n                params: [`cmd:add`, `playlist_id:${this.id}`, `performance:`],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: this.id,\n            title: `${this.playlist}`,\n            image: null,\n            type: 'playlist',\n            item: this,\n            param: JSON.stringify(this.actions.next),\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\nclass Works {\n    constructor(request) {\n        console.log(`Works`);\n        this.works = this.parseRequest(request);\n    }\n    parseRequest(request) {\n        let result = request.result;\n        if (result.works_loop) {\n            let works = result.works_loop;\n            return works.map(item => {\n                return new Work(item);\n            });\n        }\n    }\n    getMenuItems() {\n        return this.works.map(item => item.getMenu());\n    }\n}\nclass Work {\n    constructor(request_item) {\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.work_id || undefined;\n        this.composer = request_item.composer || undefined;\n        this.work = request_item.work || undefined;\n        this.composer_id = request_item.composer_id || undefined;\n        this.album_id = request_item.album_id || undefined;\n        this.textkey = request_item.textkey || undefined;\n        this.favorites_url = request_item.favorites_url || undefined;\n        this.favorites_title = request_item.favorites_title || undefined;\n        this.actions = {\n            next: {\n                command: ['albums'],\n                params: [\n                    'tags:aajlqswyKSSE',\n                    `work_id:${this.id}`,\n                    `composer_id:${this.composer_id}`,\n                    `album_id:${this.album_id}`,\n                ],\n            },\n            play: {\n                command: ['playlistcontrol'],\n                params: [`cmd:load`, `work_id:${this.id}`, `album_id:${this.album_id}`, `performance:`],\n            },\n            add: {\n                command: ['playlistcontrol'],\n                params: [`cmd:add`, `work_id:${this.id}`, `album_id:${this.album_id}`, `performance:`],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: `work_id:${this.id}`,\n            title: `${this.favorites_title}`,\n            image: null,\n            type: 'work',\n            item: this,\n            param: JSON.stringify(this.actions.next),\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\n\nclass Years {\n    constructor(request) {\n        console.log(`Years`);\n        this.years = this.parseRequest(request);\n    }\n    parseRequest(request) {\n        let result = request.result;\n        if (result.years_loop) {\n            let years = result.years_loop;\n            return years.map(item => {\n                return new Year(item);\n            });\n        }\n    }\n    getMenuItems() {\n        return this.years.map(item => item.getMenu());\n    }\n}\nclass Year {\n    constructor(request_item) {\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.year || undefined;\n        this.year = request_item.year || undefined;\n        this.favorites_url = request_item.favorites_url || undefined;\n        this.actions = {\n            next: {\n                command: ['albums'],\n                params: [\n                    'release_type:Album',\n                    'tags:aajlqswyKSSE',\n                    'sort:album',\n                    'menu:1',\n                    `year:${request_item.year}`,\n                ],\n            },\n            play: {\n                command: ['playlistcontrol'],\n                params: [`cmd:load`, `year:${this.id}`, `library_id:-1`],\n            },\n            add: {\n                command: ['playlistcontrol'],\n                params: [`cmd:add`, `year:${this.id}`],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: `year_id:${this.id}`,\n            title: `${this.year}`,\n            image: null,\n            type: 'year',\n            item: this,\n            param: JSON.stringify(this.actions.next),\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\nclass Tracks {\n    constructor(request) {\n        console.log(`Tracks`);\n        this.tracks = this.parseRequest(request);\n    }\n    parseRequest(request) {\n        let result = request.result;\n        if (result.titles_loop) {\n            let tracks = result.titles_loop;\n            return tracks.map(item => {\n                return new Track(item);\n            });\n        }\n    }\n    getMenuItems() {\n        return this.tracks.map(item => item.getMenu());\n    }\n}\nclass Track {\n    constructor(request_item) {\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.id || undefined;\n        this.title = request_item.title || undefined;\n        this.duration = request_item.duration || undefined;\n        this.artist_id = request_item.artist_id || undefined;\n        this.tracknum = request_item.tracknum || undefined;\n        this.year = request_item.year || undefined;\n        this.albumartist = request_item.albumartist || undefined;\n        this.trackartist = request_item.trackartist || undefined;\n        this.compilation = request_item.compilation || undefined;\n        this.genres = request_item.genres || undefined;\n        this.genre_ids = request_item.genre_ids || undefined;\n        this.albumartist_ids = request_item.albumartist_ids || undefined;\n        this.trackartist_ids = request_item.trackartist_ids || undefined;\n        this.actions = {\n            play: {\n                command: ['playlistcontrol'],\n                params: [`cmd:load`, `track_id:${this.id}`],\n            },\n            add: {\n                command: ['playlistcontrol'],\n                params: [`cmd:add`, `track_id:${this.id}`],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: `track_id:${this.id}`,\n            title: `${this.title}`,\n            image: null,\n            type: 'track',\n            item: this,\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\nclass PlaylistTracks {\n    constructor(request) {\n        console.log(`PlaylistTracks`);\n        this.playlisttracks = this.parseRequest(request);\n    }\n    parseRequest(request) {\n        let result = request.result;\n        if (result.playlisttracks_loop) {\n            let playlisttracks = result.playlisttracks_loop;\n            return playlisttracks.map(item => {\n                return new PlaylistTrack(item);\n            });\n        }\n    }\n    getMenuItems() {\n        return this.playlisttracks.map(item => item.getMenu());\n    }\n}\nclass PlaylistTrack {\n    constructor(request_item) {\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.id || undefined;\n        this.title = request_item.title || undefined;\n        this['playlist index'] = request_item['playlist index'] || undefined;\n        this.title = request_item.title || undefined;\n        this.duration = request_item.duration || undefined;\n        this.artist_ids = request_item.artist_ids || undefined;\n        this.tracknum = request_item.tracknum || undefined;\n        this.artist = request_item.artist || undefined;\n        this.coverid = request_item.coverid || undefined;\n        this.album_id = request_item.album_id || undefined;\n        this.album = request_item.album || undefined;\n        this.year = request_item.year || undefined;\n        this.genres = request_item.genres || undefined;\n        this.genre_ids = request_item.genre_ids || undefined;\n        this.artist_ids = request_item.artist_ids || undefined;\n        this.actions = {\n            next: {\n                command: ['playlist', 'tracks'],\n                params: ['tags:distbhz1acelyAGKPS', 'playlist_id:${this.id}'],\n            },\n            play: {\n                command: ['playlistcontrol'],\n                params: [`menu:1`, `cmd:load`, `folder_id:${this.id}`],\n            },\n            add: {\n                command: ['playlistcontrol'],\n                params: [`menu:1`, `cmd:add`, `folder_id:${this.id}`],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: `track_id:${this.id}`,\n            title: `${this.title}`,\n            image: null,\n            type: 'playlisttrack',\n            item: this,\n        };\n    }\n}\nclass Items {\n    constructor(request) {\n        console.log(`Items`);\n        let filesystem = request.params[1].includes('mode:filesystem');\n        let requestCommand = request.params[1][0] + (filesystem ? 'FS' : '');\n        this.items = this.parseRequest(request, requestCommand);\n    }\n    parseRequest(request, requestCommand) {\n        let result = request.result;\n        if (result.item_loop) {\n            let items = result.item_loop;\n            return items.map(item => {\n                return Item.create(item, requestCommand, request);\n            });\n        }\n        if (!result.titles_loop && requestCommand === 'selectVirtualLibrary') {\n            return [\n                Item.create(\n                    {\n                        type: 'virtualLibraryAnswer',\n                        text: request.result.title,\n                    },\n                    requestCommand,\n                ),\n            ];\n        }\n    }\n    getMenuItems() {\n        return this.items.map(item => item.getMenu());\n    }\n}\nclass Item {\n    // item types\n    // search|text|textarea|audio|playlist|link|opml|replace|redirect|radio\n    static create(request_item, requestCommand, request) {\n        console.log(`Item switch: ${requestCommand}_${request_item.type || ''}`);\n        switch (`${requestCommand}_${request_item.type || ''}`) {\n            case 'radios_':\n            case 'local_':\n            case 'music_':\n            case 'sports_':\n            case 'news_':\n            case 'talk_':\n            case 'location_':\n            case 'language_':\n            case 'podcast_':\n            case 'local_link':\n            case 'music_link':\n            case 'sports_link':\n            case 'news_link':\n            case 'talk_link':\n            case 'location_link':\n            case 'language_link':\n            case 'podcast_link':\n                return new ItemRadio(request_item, requestCommand);\n            case 'local_text':\n            case 'music_text':\n            case 'sports_text':\n            case 'news_text':\n            case 'talk_text':\n            case 'location_text':\n            case 'language_text':\n            case 'podcast_text':\n            case 'browselibrary_text':\n            case 'browselibraryFS_text':\n                return new ItemText(request_item, requestCommand);\n            case 'menu_':\n                return new ItemMenu(request_item, request);\n            case 'browselibrary_playlist':\n            case 'favorites_playlist':\n                return new ItemPlaylist(request_item, false);\n            case 'browselibraryFS_playlist':\n                return new ItemPlaylist(request_item, true);\n            case 'browselibraryFS_':\n                return new ItemFilesystem(request_item);\n            case 'browselibrary_audio': //ok\n            case 'browselibraryFS_audio': //ok\n            case 'local_audio': //ok\n            case 'music_audio': //ok\n            case 'sports_audio': //ok\n            case 'news_audio': //ok\n            case 'talk_audio': //ok\n            case 'location_audio': //ok\n            case 'language_audio': //ok\n            case 'podcast_audio': //ok\n            case 'favorites_audio': //ok\n                return new ItemAudio(request_item, requestCommand);\n            case 'selectVirtualLibrary_virtualLibraryAnswer':\n                return new ItemVirtualLibraryAnswer(request_item);\n            case 'selectVirtualLibrary_':\n            case 'selectVirtualLibrary_outline':\n                return new ItemVirtualLibrary(request_item);\n            case 'myapps_redirect':\n                return new ItemApplication(request_item);\n            default:\n                return new ItemMenu(request_item, request);\n            // debugger;\n            // throw new Error(`Unknown item type: ${requestCommand}_${request_item.type || ''}`);\n        }\n    }\n}\nclass ItemApplication extends Item {\n    constructor(request_item) {\n        super(request_item);\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.actions.go.params.menu || undefined;\n        this.text = request_item.text.trim() || undefined;\n        this.iconid = request_item['icon-id'] || undefined;\n        this.actions = {};\n        if (request_item.actions['go']) {\n            this.actions = {\n                ...this.actions,\n                ...{ next: translateMyMusicParameters(request_item.actions.go) },\n            };\n        }\n        if (request_item.actions['play']) {\n            this.actions = {\n                ...this.actions,\n                ...{ play: translateMyMusicParameters(request_item.actions.play) },\n            };\n        }\n        if (request_item.actions['add']) {\n            this.actions = {\n                ...this.actions,\n                ...{ add: translateMyMusicParameters(request_item.actions.add) },\n            };\n        }\n    }\n    getMenu() {\n        return {\n            id: this.id,\n            title: this.text,\n            image: this.icon,\n            type: 'itemapplication',\n            item: this,\n            param: JSON.stringify(this.actions.next),\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\nclass ItemRadio extends Item {\n    constructor(request_item, requestCommand) {\n        super(request_item);\n        this.parseRequest(request_item, requestCommand);\n    }\n    parseRequest(request_item, requestCommand) {\n        let cmd;\n        if (request_item.actions?.go) {\n            cmd = translateMyMusicParameters(request_item.actions?.go);\n        } else {\n            cmd = {\n                command: [requestCommand, 'items'],\n                params: [`menu:${requestCommand}`, `item_id:${request_item.actions.go.params.item_id}`],\n            };\n        }\n        this.id = request_item.actions.go.params.item_id || request_item.actions.go.params.menu || undefined;\n        this.text = request_item.text || undefined;\n        this.actions = {\n            next: cmd,\n        };\n    }\n    getMenu() {\n        return {\n            id: `item_id:${this.id}`,\n            title: this.text,\n            image: null,\n            type: 'radiolocal',\n            param: JSON.stringify(this.actions.next),\n            item: this,\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\nclass ItemMenu extends Item {\n    constructor(request_item, request) {\n        super(request_item);\n        this.parseRequest(request_item, request);\n    }\n    parseRequest(request_item, request) {\n        this.id = request_item.text || undefined;\n        this.text = request_item.text || 'Empty';\n        this.node = request_item.node || undefined;\n        this.weight = request_item.weight || undefined;\n        if (request_item.actions) {\n            if (request_item.actions['go']) {\n                this.actions = {\n                    ...this.actions,\n                    ...{ next: translateMyMusicParameters(request_item.actions.go) },\n                };\n            }\n            if (request_item.actions['play']) {\n                this.actions = {\n                    ...this.actions,\n                    ...{ play: translateMyMusicParameters(request_item.actions.play) },\n                };\n            }\n            if (request_item.actions['add']) {\n                this.actions = {\n                    ...this.actions,\n                    ...{ add: translateMyMusicParameters(request_item.actions.add) },\n                };\n            }\n            if (request_item.actions['do']) {\n                this.actions = {\n                    ...this.actions,\n                    ...{ add: translateMyMusicParameters(request_item.actions.do) },\n                };\n            }\n        }\n        if (request_item.goAction) {\n            if (request_item.goAction == 'play') {\n                const filteredParams = Object.keys(request_item.params)\n                    .filter(key => !key.includes('touchToPlay'))\n                    .reduce((obj, key) => {\n                        obj[key] = request_item.params[key];\n                        return obj;\n                    }, {});\n                this.actions = {\n                    play: {\n                        command: request.result.base.actions[request_item.goAction].cmd,\n                        params: [\n                            ...object2Array({\n                                ...request.result.base.actions[request_item.goAction].params,\n                                ...filteredParams,\n                            }),\n                        ],\n                    },\n                };\n            }\n        }\n        // if (request_item.actions) {\n        //     const priorityKeys = ['go', 'do'];\n        //     const goAction = priorityKeys.find(key => Object.prototype.hasOwnProperty.call(request_item.actions, key));\n        //     if (goAction) {\n        //         cmd = {\n        //             ...{ cmd: request_item.actions[goAction].cmd },\n        //             ...{ param: request_item.actions[goAction].param },\n        //         };\n        //     } else {\n        //         console.log('Please check: no valid action');\n        //     }\n\n        //     // cmd = {\n        //     //     ...{ cmd: request.result.base.actions[goAction].cmd },\n        //     //     ...{ param: request.result.base.actions[goAction].param },\n        //     // };\n        //     this.actions = {\n        //         next: cmd,\n        //     };\n        // }\n    }\n    getMenu() {\n        return {\n            id: this.id,\n            title: this.text,\n            image: null,\n            type: 'menu',\n            actions: JSON.stringify(this.actions),\n            item: this,\n        };\n    }\n}\nclass ItemFilesystem extends Item {\n    constructor(request_item) {\n        super(request_item);\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        let cmd;\n        if (request_item.actions?.go) {\n            cmd = translateMyMusicParameters(request_item.actions?.go);\n        }\n\n        this.id = request_item.actions?.go.params.item_id || undefined;\n        this.text = request_item.text || undefined;\n        this.actions = {\n            next: cmd,\n        };\n    }\n    getMenu() {\n        return {\n            id: this.id,\n            title: this.text,\n            image: null,\n            type: 'menu',\n            param: JSON.stringify(this.actions.next),\n            item: this,\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\nclass ItemPlaylist extends Item {\n    constructor(request_item, filesystem) {\n        super(request_item);\n        this.parseRequest(request_item, filesystem);\n    }\n    parseRequest(request_item, filesystem) {\n        this.id = request_item.actions?.more.params.folder_id || undefined;\n        this.text = request_item.text || undefined;\n        this.textkey = request_item.textkey || undefined;\n        this.actions = {\n            next: {\n                command: ['browselibrary', 'items'],\n                params: [\n                    'menu:browselibrary',\n                    filesystem ? 'mode:filesystem' : 'mode:bmf',\n                    ...object2Array(request_item.params),\n                ],\n            },\n            play: {\n                command: ['playlistcontrol'],\n                params: [`menu:1`, `cmd:load`, `folder_id:${this.id}`],\n            },\n            add: {\n                command: ['playlistcontrol'],\n                params: [`menu:1`, `cmd:add`, `folder_id:${this.id}`],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: `item_id:${this.id}`,\n            title: `(D) ${this.text}`,\n            image: null,\n            type: 'itemplaylist',\n            param: JSON.stringify(this.actions.next),\n            item: this,\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\nclass ItemText extends Item {\n    constructor(request_item) {\n        super(request_item);\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.text || undefined;\n        this.text = request_item.text || undefined;\n    }\n    getMenu() {\n        return {\n            id: `item_id:${this.id}`,\n            title: this.text,\n            image: null,\n            type: 'itemtext',\n            param: null,\n            item: this,\n        };\n    }\n}\nclass ItemAudio extends Item {\n    constructor(request_item, requestCommand) {\n        super(request_item);\n        this.parseRequest(request_item, requestCommand);\n    }\n    parseRequest(request_item, requestCommand) {\n        this.id = request_item.commonParams?.track_id || request_item.params?.item_id || undefined;\n        this.text = request_item.text || undefined;\n        this.textkey = request_item.textkey || undefined;\n        this.icon = request_item.icon || undefined;\n        this.iconid = request_item['icon-id'] || undefined;\n        this.favorites_type = request_item.presetParams.favorites_type || undefined;\n        this.favorites_url = request_item.presetParams.favorites_url || undefined;\n        this.favorites_title = request_item.presetParams.favorites_title || undefined;\n        this.icon = request_item.presetParams.icon || undefined;\n        this.actions = {\n            play: {\n                command: [...(requestCommand === 'browselibraryFS' ? ['browselibrary'] : [requestCommand])],\n                params: [\n                    'playlist',\n                    'play',\n                    ...(requestCommand === 'browselibrary' ? ['mode:bmf'] : []),\n                    ...(requestCommand === 'browselibraryFS' ? ['mode:filesystem'] : []),\n                    ...(requestCommand === 'browselibraryFS' ? ['menu:browselibrary'] : [requestCommand]),\n                    `item_id:${this.id}`,\n                    `isContextMenu:1`,\n                ],\n            },\n            add: {\n                command: [...(requestCommand === 'browselibraryFS' ? ['browselibrary'] : [requestCommand])],\n                params: [\n                    'playlist',\n                    'add',\n                    ...(requestCommand === 'browselibrary' ? ['mode:bmf'] : []),\n                    ...(requestCommand === 'browselibraryFS' ? ['mode:filesystem'] : []),\n                    ...(requestCommand === 'browselibraryFS' ? ['menu:browselibrary'] : [requestCommand]),\n                    `item_id:${this.id}`,\n                    `isContextMenu:1`,\n                ],\n            },\n        };\n    }\n    getMenu() {\n        return {\n            id: `item_id:${this.id}`,\n            title: `${this.text}`,\n            image: this.icon,\n            type: 'itemaudio',\n            item: this,\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\nclass ItemVirtualLibrary extends Item {\n    constructor(request_item) {\n        super(request_item);\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.actions?.go.params.item_id || undefined;\n        this.text = request_item.text || undefined;\n        let cmd = {\n            command: ['selectVirtualLibrary', 'items'],\n            params: [`item_id:${request_item.actions.go.params.item_id}`, 'menu:selectVirtualLibrary'],\n        };\n        this.actions = {\n            next: cmd,\n        };\n\n        /* \n        {\n            \"addAction\": \"go\",\n            \"text\": \"All Library (Default)\",\n            \"actions\": {\n                \"go\": {\n                    \"cmd\": [\n                        \"selectVirtualLibrary\",\n                        \"items\"\n                    ],\n                    \"params\": {\n                        \"item_id\": \"0\",\n                        \"menu\": \"selectVirtualLibrary\"\n                    },\n                    \"nextWindow\": \"myMusic\"\n                }\n            }\n        } */\n    }\n\n    getMenu() {\n        return {\n            id: `item_id:${this.id}`,\n            title: this.text,\n            image: null,\n            type: 'itemvirtuallibrary',\n            item: this,\n            param: JSON.stringify(this.actions.next),\n            actions: JSON.stringify(this.actions),\n        };\n    }\n}\n\nclass ItemVirtualLibraryAnswer extends Item {\n    constructor(request_item) {\n        super(request_item);\n        this.parseRequest(request_item);\n    }\n    parseRequest(request_item) {\n        this.id = request_item.actions?.go.params.item_id || undefined;\n        this.text = request_item.text || undefined;\n    }\n\n    getMenu() {\n        return {\n            id: `item_id:${this.id}`,\n            title: this.text,\n            image: null,\n            type: 'itemvirtuallibraryanswer',\n            item: this,\n            param: null,\n        };\n    }\n}\nfunction object2Array(obj) {\n    return Object.keys(obj).map(function (key) {\n        return `${key}:${obj[key]}`;\n    });\n}\nfunction getParamsFromCommand(params, key) {\n    return params.find(item => item.toString().startsWith(key));\n}\nfunction translateMyMusicParameters(command /* , request */) {\n    console.log(command);\n    if (command.cmd == undefined) {\n        return undefined;\n    }\n    var cmd = { command: [...command.cmd], params: [] };\n    for (var key in command.params) {\n        let p = command.params[key];\n        if (p != undefined && p != null && p.length > 0) {\n            cmd.params.push(`${key}:${p}`);\n        }\n    }\n\n    let c = [];\n    let p = [];\n    var mode = undefined;\n    var canReplace = true;\n    var hasSort = false;\n    var hasTags = false;\n    var hasArtistId = false;\n    var hasLibraryId = false;\n    var hasNonArtistRole = false;\n    for (let i = 0, params = cmd.params; i < cmd.params.length; i++) {\n        if (params[i].startsWith('mode:')) {\n            mode = params[i].split(':')[1];\n            if (mode.startsWith('myMusicArtists')) {\n                mode = 'artists';\n            } else if (\n                mode.startsWith('myMusicAlbums') ||\n                mode == 'randomalbums' ||\n                mode == 'vaalbums' ||\n                mode == 'recentlychanged'\n            ) {\n                mode = 'albums';\n            } else if (mode == 'years') {\n                p.push('hasAlbums:1');\n            } else if (mode.startsWith('myMusicWorks')) {\n                mode = 'works';\n            } else if (\n                mode != 'artists' &&\n                mode != 'albums' &&\n                mode != 'genres' &&\n                mode != 'tracks' &&\n                mode != 'playlists' &&\n                mode != 'works'\n            ) {\n                canReplace = false;\n                break;\n            }\n            c.push(mode);\n        }\n        if (!params[i].startsWith('menu:')) {\n            if (params[i].startsWith('tags:')) {\n                if (params[i].split(':')[1].indexOf('s') < 0) {\n                    i += 's';\n                }\n                p.push(params[i]);\n                hasTags = true;\n            } else {\n                p.push(params[i]);\n                if (params[i].startsWith('sort:')) {\n                    hasSort = true;\n                } else if (params[i].startsWith('artist_id:')) {\n                    hasArtistId = true;\n                } else if (params[i].startsWith('library_id:')) {\n                    hasLibraryId = true;\n                } else if (params[i].startsWith('role_id:')) {\n                    var role = params[i].split(':')[1].toLowerCase();\n                    if ('albumartist' != role && '5' != role) {\n                        hasNonArtistRole = true;\n                    }\n                }\n            }\n        }\n    }\n\n    if (canReplace && c.length == 1 && mode) {\n        if (mode == 'tracks') {\n            if (!hasTags) {\n                // If view.current.id starts with \"track_id:\" then we are in a 'More' menu, therefore\n                // want cover id of tracks...\n                // tags:distbhz1kyuAACGPSc\n                p.push('tags:distbhz1kyuAACGPSc');\n            }\n            if (!hasSort) {\n                p.push('sort:tracknum');\n            }\n        } else if (mode == 'albums') {\n            if (!hasTags) {\n                p.push(hasArtistId ? 'ArAlTP' : 'AlTP');\n            }\n            if (!hasSort) {\n                p.push(`sort:album`);\n            }\n        } else if (mode == 'playlists') {\n            if (!hasTags) {\n                p.push('PlTP');\n            }\n        } else if (!hasTags) {\n            if (mode == 'artists' || mode == 'vaalbums') {\n                p.push('ArTP');\n                if (!hasLibraryId && !hasNonArtistRole) {\n                    p.push('include_online_only_artists:1');\n                }\n            } else if (mode == 'years' || mode == 'genres') {\n                p.push('tags:s');\n            }\n        }\n        cmd = { command: c, params: p };\n    }\n    if (cmd.params.length > 0) {\n        for (var i = 0, len = cmd.params.length; i < len; ++i) {\n            cmd.params[i] = cmd.params[i]\n                .replace('ArAlTP', 'tags:aajlqswyKRSSW2')\n                .replace('ArTP', 'tags:s')\n                .replace('PlTP', 'tags:suxE')\n                .replace('AlTP', 'tags:ajlqswyKS2');\n        }\n    }\n    cmd.params.push('menu:1');\n    cmd.params.push('library_id:-1');\n    return { ...cmd };\n}\n", "{\n  \"name\": \"iobroker.squeezeboxrpc\",\n  \"version\": \"1.5.2\",\n  \"description\": \"ioBroker Logitech Squeezebox Adapter over JSON/RPC-Protocol\",\n  \"author\": {\n    \"name\": \"oweitman\",\n    \"email\": \"oweitman@gmx.de\"\n  },\n  \"homepage\": \"https://github.com/oweitman/ioBroker.squeezeboxrpc\",\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"ioBroker\",\n    \"squeezebox\",\n    \"LMS\",\n    \"Logitech Media Server\",\n    \"music server\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/oweitman/ioBroker.squeezeboxrpc\"\n  },\n  \"engines\": {\n    \"node\": \">= 18\"\n  },\n  \"dependencies\": {\n    \"@iobroker/adapter-core\": \"^3.2.3\",\n    \"jayson\": \"^4.1.2\",\n    \"lodash\": \"^4.17.4\",\n    \"npm-watch\": \"^0.13.0\",\n    \"request\": \"^2.88.0\",\n    \"super\": \"^0.2.3\"\n  },\n  \"devDependencies\": {\n    \"@alcalzone/release-script\": \"^3.8.0\",\n    \"@alcalzone/release-script-plugin-iobroker\": \"^3.7.2\",\n    \"@alcalzone/release-script-plugin-license\": \"^3.7.0\",\n    \"@alcalzone/release-script-plugin-manual-review\": \"^3.7.0\",\n    \"@iobroker/adapter-dev\": \"^1.3.0\",\n    \"@iobroker/eslint-config\": \"^1.0.0\",\n    \"@iobroker/testing\": \"^5.0.0\",\n    \"@tsconfig/node18\": \"^18.2.4\",\n    \"@types/chai\": \"^4.3.16\",\n    \"@types/chai-as-promised\": \"^8.0.0\",\n    \"@types/mocha\": \"^10.0.9\",\n    \"@types/node\": \"^22.8.6\",\n    \"@types/proxyquire\": \"^1.3.31\",\n    \"@types/sinon\": \"^17.0.3\",\n    \"@types/sinon-chai\": \"^3.2.12\",\n    \"axios\": \"^1.7.7\",\n    \"chai\": \"^4.4.1\",\n    \"chai-as-promised\": \"^8.0.0\",\n    \"mocha\": \"^10.8.2\",\n    \"proxyquire\": \"^2.1.3\",\n    \"sinon\": \"^19.0.2\",\n    \"sinon-chai\": \"^3.7.0\",\n    \"typescript\": \"~5.6.3\"\n  },\n  \"main\": \"squeezeboxrpc.js\",\n  \"files\": [\n    \"admin{,/!(src)/**}/!(tsconfig|tsconfig.*|.eslintrc).{json,json5}\",\n    \"admin{,/!(src)/**}/*.{html,css,png,svg,jpg,js}\",\n    \"lib/\",\n    \"widgets/**/!(tsconfig|tsconfig.*|.eslintrc).json\",\n    \"widgets/**/*.{html,css,png,svg,jpg,js}\",\n    \"www/\",\n    \"io-package.json\",\n    \"LICENSE\",\n    \"main.js\"\n  ],\n  \"scripts\": {\n    \"test:js\": \"mocha --config test/mocharc.custom.json \\\"{!(node_modules|test)/**/*.test.js,*.test.js,test/**/test!(PackageFiles|Startup).js}\\\"\",\n    \"test:package\": \"mocha test/package --exit\",\n    \"test:integration\": \"mocha test/integration --exit\",\n    \"test\": \"npm run test:js && npm run test:package\",\n    \"check\": \"tsc --noEmit -p tsconfig.check.json\",\n    \"lint\": \"eslint -c eslint.config.mjs .\",\n    \"build\": \"cd widgets/squeezeboxrpc && npm run build && cd ../..\",\n    \"repochecker\": \"npx github:oweitman/ioBroker.repochecker https://github.com/oweitman/ioBroker.squeezeboxrpc --local\",\n    \"translate\": \"translate-adapter\",\n    \"translate-widgets\": \"node ./bin/translate.js --source widgets/squeezeboxrpc/i18n/en.json --format single\",\n    \"release\": \"release-script --all\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/oweitman/ioBroker.squeezeboxrpc/issues\"\n  },\n  \"readmeFilename\": \"README.md\"\n}\n", "'use strict';\n/* globals $,window,document */\n/*\n    var fontStyle = '12px \"Courier New\", monospace'\n    var lineHeight = 15\n\n    var picWidth = 50;\n    var picHeight = 50;\n    var test1 = \"Squeeze Work\";\n    var test2 = \"SqueezeWork\";\n    var test3 = \"aaa- aaa - aaa     aaa aaa\";\n    $('body').append(createTextImage(test1,fontStyle,picWidth,picHeight));\n    */\n\n/**\n * Searches for the first occurrence of a given regular expression in the\n * string from the given start position. If the regex is not found, returns -1.\n *\n * @param regex The regular expression to search for\n * @param [startpos] The position to start the search from\n * @returns The position of the first match or -1 if not found\n */\nString.prototype.regexIndexOf = function (regex, startpos) {\n    const indexOf = this.substring(startpos || 0).search(regex);\n    return indexOf >= 0 ? indexOf + (startpos || 0) : indexOf;\n};\n\n/**\n * Wordwrap a given string, with options to wrap camel case words and set\n * the width of the output.\n *\n * @param str - The string to wordwrap\n * @param width - The width of the output\n * @param [opt] - Options object\n * @param [opt.wrapCamelCase] - Whether to wrap camel case words\n * @returns The wordwrapped string\n */\nfunction wordwrap(str, width, opt) {\n    opt = opt || {};\n    const splitChars = [' ', '-', '\\t'];\n    if (opt.wrapCamelCase) {\n        str = str.replace(/([a-z])([A-Z])/gm, '$1 $2');\n    }\n    const words = explode(str, splitChars);\n    let curLineLength = 0;\n    let strBuilder = '';\n    for (let i = 0; i < words.length; i += 1) {\n        let word = words[i];\n        if (curLineLength + word.length > width) {\n            if (curLineLength > 0) {\n                strBuilder += '\\n';\n                curLineLength = 0;\n            }\n            while (word.Length > width) {\n                strBuilder += `${word.substring(0, width - 1)}-`;\n                word = word.substring(width - 1);\n                strBuilder += '\\n';\n            }\n            word = word.trimStart();\n        }\n        if (curLineLength == 0 && /^\\s+$/.test(word)) {\n            word = word.trimStart();\n        }\n        strBuilder += word;\n        curLineLength += word.length;\n    }\n    return strBuilder;\n}\n\n/**\n * Split a string into parts where each part is either a word or a whitespace/dash character.\n * If a whitespace/dash character occurs between two words, it is put into its own part.\n * If a whitespace/dash character occurs at the end of a word, it is put into the same part as the word.\n *\n * @param str The string to split.\n * @returns An array of string parts.\n */\nfunction explode(str) {\n    const parts = [];\n    let startIndex = 0;\n\n    while (true) {\n        const index = str.regexIndexOf(/[ |\\t|-]/gm, startIndex);\n        if (index == -1) {\n            parts.push(str.substring(startIndex));\n            return parts;\n        }\n        const word = str.substring(startIndex, startIndex + index - startIndex);\n        const nextChar = str.substring(index, index + 1)[0];\n\n        // Dashes and the likes should stick to the word occuring before it. Whitespace doesn't have to.\n        if (/^\\s+$/.test(nextChar)) {\n            parts.push(word);\n            parts.push(nextChar);\n        } else {\n            parts.push(word + nextChar);\n        }\n        startIndex = index + 1;\n    }\n}\n\n/**\n * Calculates the height metrics of the text using the specified font.\n *\n * This function creates a temporary DOM structure to measure the ascent,\n * descent, and total height of the text \"Hg\" rendered with the given font.\n *\n * @param font - An object representing the font, which provides a method\n *                      to get the font string.\n * @returns An object containing the ascent, descent, and total height\n *                   of the text, with properties:\n *                   - ascent: The distance from the baseline to the top of the text.\n *                   - descent: The distance from the baseline to the bottom of the text.\n *                   - height: The total height of the text.\n */\nconst getTextHeight = function (font) {\n    const text = $('<span>Hg</span>').css({ font: font.getfont() });\n    const block = $('<div style=\"display: inline-block; width: 1px; height: 0px;\"></div>');\n\n    const div = $('<div></div>');\n    div.append(text, block);\n\n    const body = $('body');\n    body.append(div);\n    const result = {};\n    try {\n        block.css({ verticalAlign: 'baseline' });\n        result.ascent = block.offset().top - text.offset().top;\n\n        block.css({ verticalAlign: 'bottom' });\n        result.height = block.offset().top - text.offset().top;\n\n        result.descent = result.height - result.ascent;\n    } finally {\n        div.remove();\n    }\n    return result;\n};\n/**\n * @param text - The text to measure.\n * @param font - The font to use when measuring the text.\n * @returns The width of the text.\n */\nexport function getTextWidth(text, font) {\n    const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    context.font = font.getfont();\n    const metrics = context.measureText(text);\n    return metrics.width;\n}\n\nexport class Font {\n    /**\n     * Creates a Font object for the given element.\n     *\n     * @param elem the element to get the font string from\n     */\n    constructor(elem) {\n        this.span = document.createElement('span');\n        const fontstr = this.getFontString(elem[0]);\n        this.span.style.font = fontstr;\n        this.measure = getTextHeight(this);\n        this.measure.width = getTextWidth('M', this);\n    }\n    getAscent() {\n        return this.measure.ascent;\n    }\n    getDescent() {\n        return this.measure.descent;\n    }\n    getWidth() {\n        return this.measure.width;\n    }\n    getHeight() {\n        return this.measure.height;\n    }\n    /**\n     * Returns the current font string for the font.\n     *\n     * @returns The current font string.\n     */\n    getfont() {\n        return this.span.style.font;\n    }\n    /**\n     * Set the font string for the font.\n     *\n     * @param fontstr the new font string\n     * @returns The Font object, to allow chaining.\n     */\n    setfont(fontstr) {\n        this.span.style.font = fontstr;\n        return this;\n    }\n    /**\n     * Increase the font size of the font by one pixel.\n     *\n     * @returns The Font object, to allow chaining.\n     */\n    incFontSize() {\n        this.span.style.fontSize = `${parseInt(this.span.style.fontSize) + 1}px`;\n        return this;\n    }\n    /**\n     * Decrease the font size of the font by one pixel.\n     *\n     * @returns The Font object, to allow chaining.\n     */\n    decFontSize() {\n        this.span.style.fontSize = `${parseInt(this.span.style.fontSize) - 1}px`;\n        return this;\n    }\n    /**\n     * Given an element, returns the CSS font string for that element.\n     *\n     * @param elem - The element to get the font string for.\n     * @returns The CSS font string, or 'normal 12px sans-serif' if no font style is set.\n     */\n    getFontString(elem) {\n        const style = window.getComputedStyle(elem);\n        let elementFont = style.getPropertyValue('font');\n\n        if (elementFont) {\n            return elementFont;\n        }\n\n        const fontStyle = style.getPropertyValue('font-style');\n        const fontVariant = style.getPropertyValue('font-variant');\n        const fontWeight = style.getPropertyValue('font-weight');\n        const fontSize = style.getPropertyValue('font-size');\n        const fontFamily = style.getPropertyValue('font-family');\n\n        elementFont = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize} ${fontFamily}`.replace(/ +/g, ' ').trim();\n        return elementFont ? elementFont : 'normal 12px sans-serif';\n    }\n}\n/**\n * Adjusts the font size to ensure that the given lines of text fit within the specified width.\n *\n * @param lines - An array of strings, each representing a line of text.\n * @param picWidth - The maximum width in pixels that the text should occupy.\n * @param font - An object representing the font, which has methods to increase and decrease font size.\n * @returns The adjusted font object with a size that fits the lines within the specified width.\n */\nfunction getGoodFontSize(lines, picWidth, font) {\n    while (true) {\n        const maxWidth = getMaxPixelWidth(lines, font);\n        if (maxWidth > picWidth) {\n            font.decFontSize();\n        } else {\n            return font;\n        }\n    }\n}\n/**\n * Create a canvas with the given lines, using the given font and dimensions,\n * but using a font size which will fit the text into the canvas.\n *\n * @param lines the lines of text to be rendered\n * @param font the font to use, or a string describing it\n * @param picWidth the width of the canvas\n * @param picHeight the height of the canvas\n * @param lineHeight the line height of the text\n * @param [opt] options, as follows:\n * @param [opt.style] css style to use for the canvas\n * @param [opt.style.direction] direction of text, either 'ltr' or 'rtl'\n * @param [opt.style.textAlign] text alignment, either 'start', 'end', 'left', 'right', or 'center'\n * @param [opt.style.color] color of the text\n * @param [opt.style.backgroundcolor] background color of the canvas\n * @returns the canvas element\n */\nfunction createCanvas(lines, font, picWidth, picHeight, lineHeight, opt) {\n    opt = opt || {};\n    const canvas = document.createElement('canvas');\n    $('body').append(canvas);\n    canvas.width = picWidth;\n    canvas.height = picHeight;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = opt.style ? opt.backgroundcolor : 'black';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.font = font.getfont();\n    ctx.fillStyle = opt.style ? opt.style.color : 'white';\n    ctx.textAlign = opt.style ? opt.style.textAlign : 'center';\n    let x = 0;\n    if (opt.style) {\n        if (opt.style.direction == 'ltr') {\n            if (opt.style.textAlign == 'start' || opt.style.textAlign == 'left') {\n                x = 0;\n            }\n            if (opt.style.textAlign == 'end' || opt.style.textAlign == 'right') {\n                x = picWidth;\n            }\n            if (opt.style.textAlign == 'center') {\n                x = picWidth / 2;\n            }\n        }\n        if (opt.style.direction == 'rtl') {\n            if (opt.style.textAlign == 'end' || opt.style.textAlign == 'left') {\n                x = 0;\n            }\n            if (opt.style.textAlign == 'start' || opt.style.textAlign == 'right') {\n                x = picWidth;\n            }\n            if (opt.style.textAlign == 'center') {\n                x = picWidth / 2;\n            }\n        }\n    } else {\n        x = picWidth / 2;\n    }\n    const y = font.getDescent() + Math.floor((picHeight - lines.length * lineHeight) / 2);\n    ctx.textBaseline = 'top';\n    for (let i = 0; i < lines.length; i++) {\n        ctx.fillText(lines[i], x, y + i * lineHeight);\n    }\n    return canvas;\n}\n/**\n * Return the maximum number of characters in any line of the given array of\n * strings.\n *\n * @param lines an array of strings, each a line of text.\n * @returns the maximum number of characters in any line.\n */\nfunction getMaxChars(lines) {\n    return lines.reduce(\n        function (acc, cur) {\n            return Math.max(acc, cur.length);\n        }.bind(this),\n        0,\n    );\n}\n/**\n * Return the maximum width in pixels of the given lines of text, using the\n * given font. The width is calculated by summing the widths of each line of\n * text.\n *\n * @param lines an array of strings, each a line of text.\n * @param font the font to use, or a string describing it.\n */\nfunction getMaxPixelWidth(lines, font) {\n    return lines.reduce(\n        function (acc, cur) {\n            return Math.max(acc, getTextWidth(cur.trim(), font));\n        }.bind(this),\n        0,\n    );\n}\n\n/**\n * Create a canvas with the given text, using the given font and dimensions,\n * but using a font size which will fit the text into the canvas.\n *\n * @param text the text to be rendered\n * @param font the font to use, or a string describing it\n * @param picWidth the width of the canvas\n * @param picHeight the height of the canvas\n * @param [opt] options, as follows:\n * @param [opt.style] css style to use for the canvas\n * @param [opt.style.direction] direction of text, either 'ltr' or 'rtl'\n * @param [opt.style.textAlign] text alignment, either 'start', 'end', 'left', 'right', or 'center'\n * @param [opt.style.color] color of the text\n * @param [opt.style.backgroundcolor] background color of the canvas\n * @param [opt.wrapCamelCase] whether to wrap camel case words\n * @returns the canvas element\n */\nexport function createTextImage(text, font, picWidth, picHeight, opt) {\n    opt = opt || {};\n    font = typeof font == 'string' ? new Font(font) : font;\n    const lineHeight = font.getHeight(); //getTextHeight(font).height;\n    const charWidth = font.getWidth(); //getTextWidth(\"M\", font);\n    const maxChars = picWidth / charWidth;\n    let maxLines = picHeight / lineHeight - 1;\n    maxLines = maxLines < 0 ? 1 : maxLines;\n    let lines;\n    if (picHeight >= picWidth) {\n        for (\n            let textWidth = 1;\n            (lines = wordwrap(text, textWidth, opt).split('\\n')) && maxLines + 1 < lines.length;\n            textWidth++\n        ) {\n            //count textWidth\n        }\n    } else {\n        for (\n            let textWidth = 1;\n            (lines = wordwrap(text, textWidth, opt).split('\\n')) && getMaxChars(lines) < maxChars && lines.length > 1;\n            textWidth++\n        ) {\n            /* empty */\n        }\n    }\n    const goodFont = getGoodFontSize(lines, picWidth, font);\n    return createCanvas(lines, goodFont, picWidth, picHeight, lineHeight, opt);\n}\n", "/*\n    ioBroker.vis squeezeboxrpc Widget-Set\n\n    Copyright 2025 oweitman oweitman@gmx.de\n\n*/\n/* globals $,vis,window,systemDictionary */\n'use strict';\n\n// add translations for edit mode\nimport { version as pkgVersion } from '../../../package.json';\nimport { getTextWidth, createTextImage, Font } from './textImage.js';\nimport { parseRequestFactory } from './sbClasses.js';\n\nfetch('widgets/squeezeboxrpc/i18n/translations.json').then(async res => {\n    const i18n = await res.json();\n\n    $.extend(true, systemDictionary, i18n);\n});\n\nvis.binds['squeezeboxrpc'] = {\n    version: pkgVersion,\n    debug: false,\n    fetchResults: false,\n    showVersion: function () {\n        if (vis.binds['squeezeboxrpc'].version) {\n            console.log(`Version squeezeboxrpc: ${vis.binds['squeezeboxrpc'].version}`);\n            vis.binds['squeezeboxrpc'].version = null;\n        }\n    },\n    svg: {\n        stop: '<svg version=\"1.1\" viewBox=\"0 0 26.458 26.458\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-linecap=\"round\" stroke-width=\".3\"><path d=\"m5.7393 5.4537h14.98c0.44743 0.086371 0.23662 0.63202 0.28562 0.95661v14.309c-0.08637 0.44743-0.63202 0.23662-0.95661 0.28562h-14.309c-0.44743-0.08637-0.23662-0.63202-0.28562-0.95661v-14.309c-0.00412-0.15314 0.13248-0.28973 0.28562-0.28562z\"/></g></svg>',\n        fwd: '<svg version=\"1.1\" viewBox=\"0 0 26.458 26.458\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-width=\".3\"><path d=\"m5.3759 18.805c9.23e-5 -3.7545-1.846e-4 -7.509 1.385e-4 -11.263 0.13348-0.79848 1.117-1.0848 1.7334-0.63234 2.8067 1.9183 5.6203 3.8271 8.4226 5.7514 0.52184 0.44634 0.18084 1.2199-0.36377 1.4624-2.7112 1.8495-5.4224 3.6989-8.1336 5.5484-0.68912 0.29151-1.546-0.09983-1.6587-0.86625z\"/><path d=\"m10.668 18.805c8.7e-5 -3.7545-1.73e-4 -7.509 1.3e-4 -11.263 0.13345-0.79849 1.1171-1.0848 1.7334-0.63234 2.8067 1.9183 5.6203 3.8271 8.4226 5.7514 0.52184 0.44634 0.18084 1.2199-0.36377 1.4624-2.7112 1.8495-5.4224 3.6989-8.1336 5.5484-0.68912 0.2915-1.546-0.09982-1.6587-0.86625z\"/><path d=\"m18.876 5.3572c0.68238 0.014305 1.3705-0.02913 2.0492 0.022654 0.31228 0.23669 0.12538 0.69262 0.1764 1.0359v14.396c-0.08733 0.45287-0.63952 0.23962-0.96802 0.28916-0.45618-0.01348-0.91782 0.028-1.3703-0.02265-0.31228-0.23669-0.12538-0.69262-0.1764-1.0359v-14.396c-0.0042-0.15504 0.13412-0.29333 0.28916-0.28916z\" stroke-linecap=\"round\"/></g></svg>',\n        pause: '<svg version=\"1.1\" viewBox=\"0 0 26.458 26.458\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-linecap=\"round\" stroke-width=\".3\"><path d=\"m5.6838 5.396h5.8304c0.45073 0.086991 0.23839 0.63664 0.28773 0.96362v14.415c-0.08699 0.45073-0.63664 0.23839-0.96362 0.28773h-5.1545c-0.45073-0.08699-0.23839-0.63664-0.28773-0.96362v-14.415c-0.00415-0.15428 0.13346-0.29188 0.28773-0.28773z\"/><path d=\"m14.944 5.396h5.8304c0.45073 0.086991 0.23839 0.63664 0.28773 0.96362v14.415c-0.08699 0.45073-0.63664 0.23839-0.96362 0.28773h-5.1545c-0.45073-0.08699-0.23839-0.63664-0.28773-0.96362v-14.415c-0.0041-0.15428 0.13346-0.29188 0.28773-0.28773z\"/></g></svg>',\n        play: '<svg version=\"1.1\" viewBox=\"0 0 26.458 26.458\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-width=\".3\"><g transform=\"translate(0 -270.54)\"><path d=\"m5.2917 292.21c1.638e-4 -5.7717-3.275e-4 -11.543 2.455e-4 -17.315 0.26319-1.0382 1.4726-1.5611 2.4514-1.1989 0.80816 0.23695 1.4691 0.80297 2.2081 1.194 4.3854 2.6267 8.7811 5.2375 13.16 7.8742 0.79505 0.54047 0.45033 1.7439-0.34988 2.0757-4.8532 2.9006-9.7064 5.8011-14.56 8.7017-1.0328 0.36658-2.332 0.0381-2.8269-1.0022-0.045938-0.10342-0.084738-0.21463-0.083483-0.32941z\"/></g></g></svg>',\n        shuffle0:\n            '<svg version=\"1.1\" viewBox=\"0 0 26.458 26.458\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-linecap=\"round\" stroke-width=\".3\"><path d=\"m5.6162 5.4125h9.9891c0.35652 0.11121 0.14576 0.59069 0.20276 0.87689-0.01035 0.485 0.02087 0.97413-0.01588 1.4565-0.21946 0.23741-0.60948 0.076434-0.90595 0.12369h-9.27c-0.35652-0.11121-0.14577-0.59069-0.20276-0.87689 0.010353-0.485-0.020872-0.97413 0.015885-1.4565 0.030072-0.073761 0.10708-0.12497 0.18687-0.12369z\"/><path d=\"m10.813 9.8261h9.9891c0.35652 0.11121 0.14576 0.59069 0.20276 0.87689-0.01035 0.485 0.02087 0.97413-0.01589 1.4565-0.21946 0.23741-0.60948 0.07644-0.90595 0.12369h-9.27c-0.35652-0.11121-0.14576-0.59069-0.20276-0.87689 0.01035-0.485-0.02087-0.97413 0.01589-1.4565 0.03007-0.073761 0.10708-0.12497 0.18688-0.12369z\"/><path d=\"m5.6193 14.195h9.9891c0.35652 0.11121 0.14576 0.59069 0.20276 0.87689-0.01035 0.485 0.02087 0.97413-0.01588 1.4565-0.21946 0.23741-0.60948 0.07643-0.90595 0.12369h-9.27c-0.35652-0.11121-0.14576-0.59069-0.20276-0.87689 0.010353-0.485-0.020872-0.97413 0.015885-1.4565 0.030072-0.07376 0.10708-0.12497 0.18687-0.12369z\"/><path d=\"m10.845 18.582h9.9891c0.35652 0.11121 0.14576 0.59069 0.20276 0.87689-0.01035 0.485 0.02087 0.97413-0.01589 1.4565-0.21946 0.23741-0.60948 0.07644-0.90595 0.12369h-9.27c-0.35652-0.11121-0.14576-0.59069-0.20276-0.87689 0.01035-0.485-0.02087-0.97413 0.01589-1.4565 0.03007-0.07376 0.10708-0.12497 0.18688-0.12369z\"/></g></svg>',\n        shuffle2:\n            '<svg version=\"1.1\" viewBox=\"0 0 26.458 26.458\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-linecap=\"round\" stroke-width=\".3\"><path d=\"m10.813 18.548c-0.35617 0.11095-0.14564 0.58998-0.20257 0.87583 0.01028 0.48528-0.02076 0.97467 0.01586 1.4573 0.21919 0.2371 0.60875 0.07634 0.90486 0.12353h2.8258c-0.05537-0.30204-0.09712-0.61075-0.07338-0.93127v-1.5254h-3.4706z\"/><path d=\"m15.193 15.235c-0.44809 0.08695-0.23653 0.63372-0.28577 0.95902v4.5089c0.08728 0.44757 0.63383 0.23594 0.95902 0.28525h4.836c0.44765-0.08685 0.2359-0.63348 0.28525-0.95851v-4.5089c-0.08652-0.44816-0.63337-0.23649-0.95851-0.28577h-4.836zm0.56741 0.59324c1.4869 0.0118 2.9784-0.0236 4.4623 0.0177 0.25792 0.21902 0.09046 0.62233 0.13842 0.92678-0.01179 1.1608 0.02362 2.3264-0.01778 3.4843-0.21938 0.25783-0.62259 0.09051-0.92722 0.13842-1.2474-0.01185-2.4996 0.0237-3.7441-0.01778-0.25714-0.21976-0.09015-0.6226-0.13798-0.92722 0.01173-1.1608-0.02351-2.3263 0.0177-3.4842 0.03349-0.08241 0.11959-0.13946 0.20864-0.13798z\"/><path d=\"m5.6177 5.386h9.9891c0.35637 0.11098 0.14585 0.59007 0.20276 0.87601-0.0103 0.48529 0.0208 0.97471-0.01588 1.4574-0.21917 0.23733-0.60884 0.076486-0.90501 0.12369h-9.2709c-0.35638-0.11098-0.14586-0.59007-0.20276-0.87601 0.010298-0.48529-0.020796-0.97471 0.015885-1.4574 0.030072-0.073761 0.10708-0.12497 0.18687-0.12369z\"/><path d=\"m10.813 9.7732h9.9891c0.35637 0.11098 0.14585 0.59006 0.20276 0.87601-0.0103 0.4853 0.0208 0.97471-0.01589 1.4574-0.21917 0.23733-0.60884 0.07648-0.90501 0.12369h-9.2709c-0.35637-0.11098-0.14585-0.59006-0.20276-0.87601 0.0103-0.4853-0.0208-0.97471 0.01589-1.4574 0.03007-0.073761 0.10708-0.12497 0.18688-0.12369z\"/><path d=\"m5.6177 14.16c-0.35682 0.11055-0.14617 0.5899-0.20309 0.87583 0.010332 0.48531-0.020862 0.97475 0.015936 1.4574 0.21915 0.23774 0.609 0.07674 0.90529 0.12397h7.9475c0.01599-0.59386-0.03233-1.1941 0.0247-1.7839 0.23585-0.33075 0.70254-0.14135 1.053-0.19167 0.34447 0.08741 0.60141-0.07206 0.38911-0.42246-0.39444-0.12791-0.84703-0.02699-1.2655-0.05916h-8.867z\"/></g></svg>',\n        repeat0:\n            '<svg version=\"1.1\" viewBox=\"0 0 26.458 26.458\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-width=\".3\"><path transform=\"scale(.26458)\" d=\"m35.473 20.621c-8.2281 0-14.852 6.6235-14.852 14.852v29.055c0 8.2281 6.6235 14.852 14.852 14.852h29.055c8.2281 0 14.852-6.6235 14.852-14.852v-29.055c0-8.2281-6.6235-14.852-14.852-14.852h-4.0195v9.6641c0 0.05754-0.01898 0.1113-0.02344 0.16797 5.108 0.40503 9.1016 4.6456 9.1016 9.8613v19.371c0 5.4854-4.415 9.9004-9.9004 9.9004h-19.371c-5.4854 0-9.9004-4.415-9.9004-9.9004v-19.371c0-5.4854 4.415-9.9004 9.9004-9.9004h0.21094c-0.0026-0.04363-0.01758-0.08477-0.01758-0.12891v-9.6641z\" fill=\"#fff\" stroke-linecap=\"round\"/><path d=\"m10.111 9.4128v-5.3598c-0.0082 0.018122-0.0021-0.17387 0.24672-0.34879 0.24874-0.17491 0.65793 0 0.65793 0l4.6078 2.7541s0.1702 0.098349 0.16971 0.29612c-4.97e-4 0.20056-0.1784 0.32361-0.1784 0.32361l-4.5991 2.7487s-0.39816 0.13052-0.65793-0.063572c-0.25976-0.19409-0.24672-0.35035-0.24672-0.35035z\" /></g></svg>',\n        repeat1:\n            '<svg version=\"1.1\" viewBox=\"0 0 26.458 26.458\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-width=\".3\"><path transform=\"scale(.26458)\" d=\"m35.471 20.607c-8.2281 0-14.852 6.6235-14.852 14.852v29.055c0 8.2281 6.6235 14.852 14.852 14.852h15.297c-0.099283-0.23342-0.20508-0.4639-0.28516-0.70898-1.0314-3.157-0.36829-6.37 1.3789-9.084h-11.549c-5.4854 0-9.9004-4.415-9.9004-9.9004v-19.371c0-5.4853 4.415-9.9004 9.9004-9.9004h0.21094c-0.0026-0.04362-0.01758-0.08476-0.01758-0.12891v-9.6641zm25.035 0v9.6641c0 0.05752-0.0189 0.11131-0.02344 0.16797 1.6304 0.12928 3.1454 0.65289 4.4551 1.4707v-4.7422h10.172l-0.17773 3.0039v0.0078c0.0017 0.81652 0.51993 2.0016 1.6992 3.5879 0.75387 1.014 1.7283 2.1484 2.7461 3.3945v-1.7031c0-8.2281-6.6235-14.852-14.852-14.852zm14.426 28.418-0.0078 23.127c0.02228 1.1774-0.15778 2.3265-0.49805 3.4277 3.0352-2.7155 4.9512-6.6543 4.9512-11.066v-4.1504c-0.56305 0.11278-1.2016 0.10116-1.877-0.18359-1.5706-0.66221-1.9257-2.0105-2.0215-2.7676-0.09574-0.75705 3e-3 -1.3469 0.18359-1.9414 0.08357-0.27565 0.31768-3.3953-0.38281-5.7285-0.08795-0.29287-0.24795-0.45038-0.34766-0.7168z\" fill=\"#fff\" stroke=\"#fffffb\" stroke-linecap=\"round\"/><path d=\"m10.111 9.4094v-5.3598c-0.0082 0.01812-0.0021-0.17387 0.24672-0.34879 0.24874-0.17491 0.65793 0 0.65793 0l4.6078 2.7541s0.1702 0.09835 0.16971 0.29612c-5.03e-4 0.20056-0.1784 0.32361-0.1784 0.32361l-4.5991 2.7487s-0.39816 0.13052-0.65793-0.06357c-0.25976-0.19409-0.24672-0.35035-0.24672-0.35035z\" /><path d=\"m19.028 7.9826h-1.0564v9.5915c-0.58411-0.2504-1.34-0.25388-2.0856 0.04816-1.3358 0.54165-2.1316 1.8592-1.7778 2.9424 0.35402 1.0835 1.7238 1.5224 3.0594 0.98077 1.1345-0.45993 1.8767-1.4796 1.8585-2.4399l0.0018-7.8441c1.842 0.32346 1.9681 2.9181 1.7475 3.6457-0.08378 0.27574 0.06375 0.48221 0.34217 0 1.9862-3.4426-2.0896-4.9615-2.0896-6.9244z\" /></g></svg>',\n        rew: '<svg version=\"1.1\" viewBox=\"0 0 26.458 26.458\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-miterlimit=\"4.1\" stroke-width=\".3\"><path d=\"m21.082 18.805c-9.3e-5 -3.7545 1.87e-4 -7.509-1.4e-4 -11.263-0.13349-0.79848-1.117-1.0848-1.7334-0.63234-2.8067 1.9183-5.6203 3.8271-8.4226 5.7514-0.52184 0.44634-0.18084 1.2199 0.36377 1.4624 2.7112 1.8495 5.4224 3.6989 8.1336 5.5484 0.68912 0.2915 1.546-0.09983 1.6587-0.86625z\"/><path d=\"m15.791 18.805c-8.7e-5 -3.7545 1.73e-4 -7.509-1.3e-4 -11.263-0.13345-0.79849-1.1171-1.0848-1.7334-0.63234-2.8067 1.9183-5.6203 3.8271-8.4226 5.7514-0.52184 0.44634-0.18084 1.2199 0.36377 1.4624 2.7112 1.8495 5.4224 3.6989 8.1336 5.5484 0.68912 0.2915 1.546-0.09982 1.6587-0.86625z\"/><path d=\"m7.5828 5.3572c-0.68239 0.014305-1.3705-0.02913-2.0492 0.022654-0.31228 0.23669-0.12538 0.69262-0.1764 1.0359v14.396c0.087332 0.45287 0.63952 0.23962 0.96802 0.28916 0.45618-0.01348 0.91782 0.028 1.3703-0.02265 0.31228-0.23669 0.12538-0.69262 0.1764-1.0359v-14.396c0.00417-0.15504-0.13412-0.29333-0.28916-0.28916z\" stroke-linecap=\"round\"/></g></svg>',\n        add: '<svg viewBox=\"0 0 24 24\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-width=\".3\"><path d=\"M14 10H3v2h11zm0-4H3v2h11zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2zM3 16h7v-2H3z\"></path></g></svg>',\n        menuback:\n            '<svg viewBox=\"0 0 24 24\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-width=\".3\"><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"></path></g></svg>',\n        next: '<svg viewBox=\"0 0 24 24\"><g fill=\"#ffffff\" stroke=\"#ffffff\" stroke-width=\".3\"><path d=\"m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"></path></g></svg>',\n    },\n    playerattributes: [\n        'Playername',\n        'PlayerID',\n        'Connected',\n        'IP',\n        'Power',\n        'Mode',\n        'Time',\n        'Rate',\n        'SyncSlaves',\n        'SyncMaster',\n        'Volume',\n        'PlaylistRepeat',\n        'PlaylistShuffle',\n        'Remote',\n        'Playlist',\n        'PlaylistCurrentIndex',\n        'state',\n        'Duration',\n        'Bitrate',\n        'Album',\n        'ArtworkUrl',\n        'Genre',\n        'Type',\n        'Title',\n        'Artist',\n        'Albumartist',\n        'Trackartist',\n        'Band',\n        'Url',\n        'RadioName',\n    ],\n    browser: {\n        topitems: [\n            {\n                title: 'My Music',\n                actions: JSON.stringify({ next: 'mymusic' }),\n                id: 'myMusic',\n            },\n            {\n                title: 'Radio',\n                actions: JSON.stringify({ next: 'radio' }),\n                id: 'radio',\n            },\n            {\n                title: 'Favorites',\n                actions: JSON.stringify({ next: 'favorites' }),\n                id: 'favorites',\n            },\n            {\n                title: 'Apps',\n                actions: JSON.stringify({ next: 'apps' }),\n                id: 'apps',\n            },\n            {\n                title: 'Extra',\n                actions: JSON.stringify({ next: 'extra' }),\n                id: 'extra',\n            },\n        ],\n        specialRangeHandling: [\n            {\n                mode: 'mode:floptracks',\n                range: [0, 200],\n            },\n            {\n                mode: 'mode:toptracks',\n                range: [0, 200],\n            },\n        ],\n        indexParam: [0, 25000],\n        info: {},\n        createWidget: async function (widgetID, view, data, style) {\n            console.log(`createWidget ${widgetID}`);\n            const $div = $(`#${widgetID}`);\n            // if nothing found => wait\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].browser.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n            if (!this.info[widgetID]) {\n                this.info[widgetID] = {\n                    history: [],\n                    data: data,\n                    style: style,\n                    view: view,\n                };\n            }\n            vis.binds['squeezeboxrpc'].debug = data.debug || false;\n            vis.binds['squeezeboxrpc'].fetchResults = data.debugwithFetchResults || false;\n\n            this.info[widgetID].instance = data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes(\n                $div,\n                data.widgetPlayer,\n            );\n            let ainstance = this.info[widgetID].instance;\n            if (!ainstance) {\n                return;\n            }\n            const playername = await vis.binds['squeezeboxrpc'].getPlayerNameAsync(data.widgetPlayer);\n            const state = `${ainstance[0]}.${ainstance[1]}.Players` + `.${playername}.PlayerID`;\n            this.info[widgetID].playerid = await vis.binds['squeezeboxrpc'].getPlayerID(state);\n            this.goDeeper(widgetID, { id: 'home', title: 'Home', params: null });\n        },\n        async goDeeper(widgetID, data) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`goDeeper ${widgetID}`);\n            let children = await this.fetchChildren(widgetID, data);\n            if (!children) {\n                vis.binds['squeezeboxrpc'].debug && console.log(`End of tree reached ${widgetID}`);\n                return;\n            }\n            this.info[widgetID].history.push(data);\n            this.render(widgetID, children);\n        },\n        async goBack(widgetID) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`goBack ${widgetID}`);\n            if (this.info[widgetID].history.length > 1) {\n                this.info[widgetID].history.pop();\n            }\n            if (this.info[widgetID].history.length == 0) {\n                return;\n            }\n            let data = this.info[widgetID].history[this.info[widgetID].history.length - 1];\n            let children = await this.fetchChildren(widgetID, data);\n            this.render(widgetID, children);\n        },\n        async fetchChildren(widgetID, data) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`fetchChildren ${widgetID}`);\n            let items = {};\n            switch (data.id || '') {\n                case 'home':\n                    items = this.topitems;\n                    // // title = target.title;\n                    break;\n                case 'radio':\n                    items = await vis.binds['squeezeboxrpc'].browser.browseradio(widgetID, data);\n                    break;\n                case 'favorites':\n                    items = await vis.binds['squeezeboxrpc'].browser.browserfavorites(widgetID, data);\n                    break;\n                case 'apps':\n                    items = await vis.binds['squeezeboxrpc'].browser.browseapps(widgetID, data);\n                    break;\n                case 'myMusic':\n                case 'extra':\n                    items = await vis.binds['squeezeboxrpc'].browser.browsemenu(widgetID, data);\n                    break;\n                default:\n                    if (data.actions) {\n                        items = await vis.binds['squeezeboxrpc'].browser.browseparametermenu(widgetID, data);\n                    }\n                    break;\n            }\n            if (!items) {\n                return;\n            }\n            return items.filter(el => el);\n        },\n        browseapps: async function (widgetID) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`browseapps ${widgetID}`);\n            let ainstance = this.info[widgetID].instance;\n            const cmd = {\n                playerid: this.info[widgetID].playerid,\n                cmdArray: ['myapps', 'items', 0, '25000', 'menu:1'],\n            };\n            let request = await vis.binds['squeezeboxrpc'].browsesendToAsync(ainstance.join('.'), 'cmdGeneral', cmd);\n            let menu = parseRequestFactory(request);\n            return menu.getMenuItems();\n        },\n        browseradio: async function (widgetID) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`browseradio ${widgetID}`);\n            let ainstance = this.info[widgetID].instance;\n            const cmd = {\n                playerid: this.info[widgetID].playerid,\n                cmdArray: ['radios', 0, '25000', 'menu:radio'],\n            };\n            let request = await vis.binds['squeezeboxrpc'].browsesendToAsync(ainstance.join('.'), 'cmdGeneral', cmd);\n            let menu = parseRequestFactory(request);\n            return menu.getMenuItems();\n        },\n        browserfavorites: async function (widgetID) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`browserfavorites ${widgetID}`);\n            let ainstance = this.info[widgetID].instance;\n            const cmd = {\n                playerid: this.info[widgetID].playerid,\n                cmdArray: ['favorites', 'items', 0, '25000', 'menu:favorites'],\n            };\n            let request = await vis.binds['squeezeboxrpc'].browsesendToAsync(ainstance.join('.'), 'cmdGeneral', cmd);\n            let menu = parseRequestFactory(request);\n            return menu.getMenuItems();\n        },\n        browsemenu: async function (widgetID, data) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`browsemenu ${widgetID}`);\n            let ainstance = this.info[widgetID].instance;\n            const data1 = {\n                playerid: this.info[widgetID].playerid,\n                cmdArray: ['menu', 'items', 0, '25000', 'direct:1'],\n            };\n            let request = await vis.binds['squeezeboxrpc'].browsesendToAsync(ainstance.join('.'), 'cmdGeneral', data1);\n            let filter = item => item.item.node === data.id;\n            let menu = parseRequestFactory(request);\n            return menu\n                .getMenuItems()\n                .filter(filter)\n                .sort((a, b) => a.item.weight - b.item.weight);\n            //return this.parseResult(request, filter, data.id);\n        },\n        browseparametermenu: async function (widgetID, data) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`browseparametermenu ${widgetID}`);\n            let parameter = JSON.parse(data.actions)['next'];\n            let ainstance = this.info[widgetID].instance;\n            let range = [...this.indexParam];\n            if (parameter.params) {\n                this.specialRangeHandling.forEach(item => {\n                    if (parameter.params.includes(item.mode)) {\n                        range = item.range;\n                    }\n                });\n            } /* else {\n                return;\n            } */\n            const cmd = {\n                playerid: this.info[widgetID].playerid,\n                cmdArray: [...parameter.command, ...range, ...parameter.params],\n            };\n            let request = await vis.binds['squeezeboxrpc'].browsesendToAsync(ainstance.join('.'), 'cmdGeneral', cmd);\n            let menu = parseRequestFactory(request);\n            return menu.getMenuItems();\n        },\n        clickhandler: async function (event, widgetID, func, id) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`clickhandler ${widgetID} ${func} ${id}`);\n            let child;\n\n            event.preventDefault();\n            event.stopPropagation();\n            if (id) {\n                child = this.info[widgetID].currentChildren.find(c => c.id == id);\n            }\n            if (func == 'next') {\n                /*                 if (!child.param) {\n                    return;\n                } */\n                await this.goDeeper(widgetID, child);\n            } else if (func == 'back') {\n                await this.goBack(widgetID);\n                return;\n            } else {\n                await this.doAction(widgetID, child, func, id);\n                return;\n            }\n        },\n        doAction: async function (widgetID, child, func /* , id */) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`doAction`);\n            let actions = JSON.parse(child.actions);\n            let parameter = actions[func];\n            let ainstance = this.info[widgetID].instance;\n            const cmd = {\n                playerid: this.info[widgetID].playerid,\n                cmdArray: [...parameter.command, ...parameter.params],\n            };\n            /* let request =  */ await vis.binds['squeezeboxrpc'].browsesendToAsync(\n                ainstance.join('.'),\n                'cmdGeneral',\n                cmd,\n            );\n        },\n        render(widgetID, children) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`render ${widgetID}`);\n            let backTitle = '--';\n            backTitle = this.info[widgetID].history.reduce(\n                (acc, val, i) => `${acc} ${i == 0 ? '' : '/'} ${val.title}`,\n                '',\n            );\n            const font = new Font($(`#${widgetID}`));\n            let textwidth = getTextWidth(`...${backTitle}`, font);\n            let widgetwidth = $(`#${widgetID}`).width();\n\n            this.info[widgetID].currentChildren = children;\n            let text = '';\n\n            text += `\n            <style>\n                /* Grundlegendes Layout der Listen-Container */\n                 #${widgetID} .sqbrowser-list-container {\n                    width: 100%;\n                    // max-width: 600px; /* Beispiel: feste max-Breite */\n                    margin: 0 auto; /* zentriert auf der Seite */\n                    box-sizing: border-box;\n                }\n                #${widgetID} .sqbrowser-parent-directory {\n                    position: sticky;          /* \"Klebt\" an einer definierten Position */\n                    top: 0;                    /* Fixiert oben im Container */\n                    padding: 0rem 0rem;\n                    z-index: 10;               /* Damit sie auch oben bleibt, falls andere Elemente dar\u00FCberliegen k\u00F6nnten */\n                    border-bottom: 1px solid #ccc;\n                    background-color: black;\n                    cursor: pointer;\n                }\n                #${widgetID} .sqbrowser-ellipsis {\n                    white-space: nowrap;\n                    text-overflow: ellipsis;\n                    direction: rtl;\n                    overflow: hidden;\n                }\n                #${widgetID} .sqbrowser-scrollable-area {\n                    /* Hier legen wir die H\u00F6he fest, ab der gescrollt werden soll */\n                    /* max-height: 300px; */         /* Beispiel: 300px */\n                    overflow-y: auto;          /* Vertikales Scrollen bei \u00DCberlauf */\n                    padding: 0 0rem;\n                }\n                /* Einzelne List-Items */\n                #${widgetID} .sqbrowser-list-item {\n                    display: flex;\n                    align-items: center;\n                    justify-content: space-between;\n                    padding: 0.2rem;\n                    margin: 0.2rem 0;\n                    // background-color: #f8f8f8;\n                    border: 1px solid #ccc;\n                    border-radius: 4px;\n                    z-index: 1;\n                }\n\n                #${widgetID} .sqbrowser-list-item[onclick] {\n                    cursor: pointer; /* signalisiert, dass klickbar ist */\n                }\n\n                /* Der Text-Bereich innerhalb eines List-Items */\n                #${widgetID} .sqbrowser-list-item-content {\n                    flex: 1; /* soll den verf\u00FCgbaren Platz f\u00FCllen */\n                    margin-right: 1rem; /* Abstand zu den Buttons */\n                    white-space: nowrap; /* verhindert Zeilenumbruch */\n                    overflow: hidden; /* versteckt \u00FCberflie\u00DFenden Text */\n                    text-overflow: ellipsis; /* f\u00FCgt \u201E...\u201C ein, wenn Text nicht passt */\n                }\n\n                /* Button-Gruppe auf der rechten Seite */\n                 #${widgetID} .sqbrowser-button-group {\n                    display: flex;\n                    align-items: center;\n                }\n\n                /* Die Buttons selbst */\n                 #${widgetID} .sqbrowser-action-btn {\n                    margin-left: 0.2rem;\n                    padding: 0.1rem 0.2rem;\n                    cursor: pointer;\n                    border: 1px solid #666;\n                    background-color: #eee;\n                    border-radius: 3px;\n                    font-size: 1rem;\n                }\n                 #${widgetID} svg:active { \n                    transform: scale(0.8, 0.8);\n                    transform-origin: 50% 50%;\n                }\n\n                /* Drei-Punkte-Button standardm\u00E4\u00DFig ausgeblendet, \n                nur sichtbar werden, wenn nicht genug Platz f\u00FCr Button2 ist */\n                #${widgetID} .sqbrowser-more-btn {\n                    display: none; /* wird per Media Query eingeblendet */\n                }\n                #${widgetID} .sqbrowser-btn-svg {\n                    width: 1rem;\n                    height: 1rem;\n                    margin: 0px 1px;\n                    cursor: pointer;\n                }\n                #${widgetID} .sqbrowser-btn-svg-action {\n                    border: 1px solid white;\n                }\n                #${widgetID} .sqbrowser-btn-svg-menu {\n                    display: inline-block;\n                    vertical-align: middle;\n                    height: fit-content;\n                }\n                    </style>\n            `;\n            text += ` \n            <div class=\"sqbrowser-list-container\">\n                <div class=\"sqbrowser-parent-directory ${textwidth - 10 > widgetwidth ? 'sqbrowser-ellipsis' : ''}\" onclick=\"vis.binds.squeezeboxrpc.browser.clickhandler(event, '${widgetID}', 'back')\">\n                    <div class=\"sqbrowser-btn-svg sqbrowser-btn-svg-menu\">\n                        ${vis.binds['squeezeboxrpc'].svg.menuback}\n                    </div>\n                    <span>${backTitle}</span>\n                </div>\n                <div class=\"sqbrowser-scrollable-area\">\n            `;\n            for (let i = 0; i < children.length; i++) {\n                let buttons;\n                if (children[i].actions) {\n                    buttons = JSON.parse(children[i].actions);\n                }\n                let click = '';\n                if (buttons && buttons.next) {\n                    click = children[i].actions\n                        ? `onclick=\"vis.binds.squeezeboxrpc.browser.clickhandler(event, '${widgetID}', 'next','${children[i].id}')\"`\n                        : ``;\n                }\n                text += /* html */ `\n                    <div\n                        class=\"sqbrowser-list-item\"\n                        ${click}\n                    >\n                        <div class=\"sqbrowser-list-item-content\">${children[i].title}</div>\n                        <div class=\"sqbrowser-button-group\">\n            `;\n\n                if (buttons) {\n                    let actions = [\n                        { id: 'next', svg: 'next' },\n                        { id: 'play', svg: 'play' },\n                        { id: 'add', svg: 'add' },\n                    ];\n                    for (let action = 0; action < actions.length; action++) {\n                        if (buttons[actions[action].id]) {\n                            text += `\n                            <div class=\"sqbrowser-btn-svg sqbrowser-btn-svg-action\" onclick=\"vis.binds.squeezeboxrpc.browser.clickhandler(event, '${widgetID}', '${actions[action].id}','${children[i].id}')\">\n                                ${vis.binds['squeezeboxrpc'].svg[actions[action].svg]}\n                            </div>\n                            `;\n                        }\n                    }\n                }\n                text += `                         \n                        </div>\n                    </div>\n                `;\n            }\n            text += /* html */ `\n                </div></div>\n            `;\n            $(`#${widgetID}`).html(text);\n        },\n        parseResult: function (request, filter, rootmenu) {\n            vis.binds['squeezeboxrpc'].debug && console.log(`parseResult`);\n            let result = request.result;\n            if (result.years_loop) {\n                let items = result.years_loop;\n                return items.map(item => {\n                    return {\n                        id: item.year,\n                        title: `${item.year}`,\n                        type: 'years',\n                        favorites_url: item.facorites_url,\n                        rootmenu: rootmenu,\n                    };\n                });\n            }\n            if (result.works_loop) {\n                let items = result.works_loop;\n                return items.map(item => {\n                    return {\n                        id: `work_id:${item.work_id}`,\n                        title: `${item.favorites_title}`,\n                        type: 'work',\n                        favorites_url: item.facorites_url,\n                        albumid: item.album_id,\n                        composer: item.composer,\n                        composer_id: item.composer_id,\n                        work: item.work,\n                        rootmenu: rootmenu,\n                    };\n                });\n            }\n            if (result.genres_loop) {\n                let items = result.genres_loop;\n                return items.map(item => {\n                    return {\n                        id: item.id,\n                        title: `${item.genre}`,\n                        type: 'genre',\n                        favorites_url: item.facorites_url,\n                        rootmenu: rootmenu,\n                    };\n                });\n            }\n            if (result.albums_loop) {\n                let items = result.albums_loop;\n                return items.map(item => {\n                    return {\n                        id: item.id,\n                        title: `${item.artist} / ${item.album} (${item.year})`,\n                        image: `/music/${item.artwork_track_id}/cover_300x300_f`,\n                        type: 'album',\n                        favorites_url: item.facorites_url,\n                        rootmenu: rootmenu,\n                    };\n                });\n            }\n            if (result.artists_loop) {\n                let items = result.artists_loop;\n                return items.map(item => {\n                    return {\n                        id: item.id,\n                        title: item.artist,\n                        image: `/imageproxy/mai/artist/${item.id}/image_300x300_f`,\n                        type: 'artist',\n                        favorites_url: item.favorites_url,\n                        rootmenu: rootmenu,\n                    };\n                });\n            }\n            if (result.item_loop) {\n                let items = result.item_loop;\n                const style = result.window?.windowStyle || '';\n                //=='icon_list'){\n                if (filter) {\n                    items = items.filter(filter);\n                }\n                if (rootmenu == 'myMusic' && style == 'icon_list') {\n                    return items.map(item => {\n                        return {\n                            id: item.commonParams.track_id,\n                            type: 'track',\n                            title: item.text.replace('\\n', ' - '),\n                            icon: item.icon,\n                            rootmenu: rootmenu,\n                        };\n                    });\n                }\n                if (rootmenu == 'myMusic' && (style == 'text_list' || style == 'home_menu')) {\n                    return items.map(item => {\n                        if (item.type == 'audio') {\n                            return {\n                                id: item.params.item_id,\n                                type: 'track',\n                                title: item.text.replace('\\n', ' - '),\n                                icon: null,\n                                rootmenu: rootmenu,\n                            };\n                        }\n                        if (item.type == 'playlist') {\n                            let cmd = {\n                                command: ['browselibrary', 'items'],\n                                params: ['menu:browselibrary', 'mode:bmf', ...this.object2Array(item.params)],\n                            };\n                            return {\n                                id: item.params.item_id,\n                                type: 'playlist',\n                                title: `(D) ${item.text.replace('\\n', ' - ')}`,\n                                param: JSON.stringify(cmd),\n                                icon: null,\n                                rootmenu: rootmenu,\n                            };\n                        }\n                    });\n                }\n                if (style == '' && rootmenu == 'myMusic') {\n                    items = items.sort((a, b) => a.weight - b.weight);\n                    return items.map(item => {\n                        return {\n                            id: item.id,\n                            type: 'menu',\n                            title: item.text,\n                            param: JSON.stringify(this.translateMyMusicParameters(item.actions.go)),\n                            icon: item.icon,\n                            rootmenu: rootmenu,\n                        };\n                    });\n                }\n                if (style == '' && rootmenu == 'radio') {\n                    items = items.sort((a, b) => a.weight - b.weight);\n                    return items.map(item => {\n                        return {\n                            id: item.text,\n                            type: 'radio',\n                            title: item.text,\n                            param: JSON.stringify(this.translateMyMusicParameters(item.actions.go)),\n                            icon: item.icon,\n                            rootmenu: rootmenu,\n                        };\n                    });\n                }\n                if (rootmenu == 'radio' && style == 'text_list') {\n                    return items.map(item => {\n                        return {\n                            id: item.text,\n                            type: 'radio',\n                            title: item.text.replace('\\n', ' - '),\n                            param: JSON.stringify(this.translateMyMusicParameters(item.actions.go)),\n                            icon: null,\n                            rootmenu: rootmenu,\n                        };\n                    });\n                }\n                if (rootmenu == 'radio' && style == 'icon_list') {\n                    return items.map(item => {\n                        return {\n                            id: item.params.item_id,\n                            type: 'track',\n                            title: item.text.replace('\\n', ' - '),\n                            icon: item.icon,\n                            rootmenu: rootmenu,\n                        };\n                    });\n                }\n            }\n        },\n\n        object2Array: function (obj) {\n            return Object.keys(obj).map(function (key) {\n                return `${key}:${obj[key]}`;\n            });\n        },\n    },\n    favorites: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            // if nothing found => wait\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].favorites.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n            data.functionname = 'favorites';\n\n            let redrawinspectwidgets = false;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            const key = `${ainstance[0]}.${ainstance[1]}.` + `Favorites.*`;\n            vis.conn.gettingStates = 0;\n            vis.conn.getStates(\n                key,\n                function (err, obj) {\n                    let favorites = this.getFavorites(obj, ainstance);\n                    favorites = data.viewindexcheck = this.filterFavorites(favorites);\n\n                    const editmodehelper = data.editmodehelper;\n                    const picWidth = data.picWidth;\n                    const picHeight = data.picHeight;\n                    const opacity = vis.editMode && editmodehelper ? 1 : data.opacity;\n                    const borderwidth = data.borderwidth;\n                    const borderstyle = data.borderstyle;\n                    const bordercolornormal = data.bordercolornormal;\n                    const bordercoloractive = data.bordercoloractive;\n                    const borderradius = data.borderradius;\n                    const buttonmargin = data.buttonmargin || '0px';\n\n                    if (!data.viewindex || data.viewindex.trim() == '') {\n                        data.viewindex = this.getViewindex(favorites).join(', ');\n                    }\n\n                    if (vis.editMode && data.bCount != Math.min(favorites.length, data.viewindex.split(',').length)) {\n                        data.bCount = Math.min(favorites.length, data.viewindex.split(',').length);\n                        redrawinspectwidgets = true;\n                    }\n\n                    let text = '';\n\n                    text += '<style>\\n';\n                    text += `#${widgetID} div {\\n`;\n                    text += '     display: inline-block; \\n';\n                    text += '}\\n';\n                    text += `#${widgetID} div div {\\n`;\n                    text += '     position: relative; \\n';\n                    text += `     margin: 0px ${buttonmargin} ${buttonmargin} 0px; \\n`;\n                    text += '}\\n';\n                    text += `#${widgetID} input[type=\"radio\"] {\\n`;\n                    text += '    display: none;\\n';\n                    text += '}\\n';\n                    text += `#${widgetID} img {\\n`;\n                    text += `    opacity: ${opacity};\\n`;\n                    text += `    width: ${picWidth}px;\\n`;\n                    text += `    height: ${picHeight}px;\\n`;\n                    text += `    border: ${borderwidth} ${borderstyle} ${bordercolornormal};\\n`;\n                    text += `    border-radius: ${borderradius};\\n`;\n                    text += '}\\n';\n                    text += `#${widgetID} canvas {\\n`;\n                    text += `    opacity: ${opacity};\\n`;\n                    text += `    width: ${picWidth}px;\\n`;\n                    text += `    height: ${picHeight}px;\\n`;\n                    text += `    border: ${borderwidth} ${borderstyle} ${bordercolornormal};\\n`;\n                    text += `    border-radius: ${borderradius};\\n`;\n                    text += '}\\n';\n                    text += `#${widgetID} img:active {\\n`;\n                    text += '    transform: scale(0.9, 0.9);\\n';\n                    text += '    opacity: 1;\\n';\n                    text += `    border: ${borderwidth} ${borderstyle} ${bordercoloractive};\\n`;\n                    text += `    border-radius: ${borderradius};\\n`;\n                    text += '}\\n';\n                    text += `#${widgetID} canvas:active {\\n`;\n                    text += '    transform: scale(0.9, 0.9);\\n';\n                    text += '    opacity: 1;\\n';\n                    text += `    border: ${borderwidth} ${borderstyle} ${bordercoloractive};\\n`;\n                    text += `    border-radius: ${borderradius};\\n`;\n                    text += '}\\n';\n                    text += `#${widgetID} input[type=\"radio\"]:checked + label img {\\n`;\n                    text += '    opacity: 1;\\n';\n                    text += `    border: ${borderwidth} ${borderstyle} ${bordercoloractive};\\n`;\n                    text += `    border-radius: ${borderradius};\\n`;\n                    text += '}\\n';\n                    text += `#${widgetID} input[type=\"radio\"]:checked + label canvas {\\n`;\n                    text += '    opacity: 1;\\n';\n                    text += `    border: ${borderwidth} ${borderstyle} ${bordercoloractive};\\n`;\n                    text += `    border-radius: ${borderradius};\\n`;\n                    text += '}\\n';\n                    text += '</style>\\n';\n\n                    text += `<div id=\"${widgetID}container\">`;\n                    const viewindex = data.viewindex.split(', ');\n                    for (let i = 0; i < viewindex.length; i++) {\n                        const favorite = this.findById(favorites, viewindex[i]);\n                        text += '  <div>';\n                        text += `    <input type=\"radio\" id=\"${widgetID}${favorite.id}\" name=\"${widgetID}\" value=\"${\n                            favorite.id\n                        }\" >`;\n                        text += `    <label for=\"${widgetID}${favorite.id}\">`;\n                        text += '      <span>';\n                        let favimage = favorite.image || '';\n                        let favtext = favorite.id || '';\n                        let attrimage = data[`buttonsImage${i + 1}`] || '';\n                        let attrtext = data[`buttonsText${i + 1}`] || '';\n\n                        favimage = favimage.trim();\n                        favtext = favtext.trim();\n                        attrimage = attrimage.trim();\n                        attrtext = attrtext.trim();\n\n                        const buttonsImage = attrimage || favimage;\n\n                        if (!attrtext && buttonsImage) {\n                            text += `        <img src=\"${buttonsImage}\">`;\n                        }\n                        text += '      </span>';\n                        text += '    </label>';\n                        if (vis.editMode && editmodehelper) {\n                            text += `<div style=\"position: absolute;top: 0;right: 0;background-color: black;color: white;border-width: 1px;border-color: white;border-style: solid;font-size: xx-small;padding: 1px;\">${\n                                viewindex[i]\n                            }</div>`;\n                        }\n                        text += '  </div>';\n                    }\n                    text += '</div>';\n\n                    $(`#${widgetID}`).html(text);\n\n                    const spans = $(`#${widgetID} span`);\n                    const font = new Font($(`#${widgetID}`));\n                    const opt = {};\n\n                    opt.style = window.getComputedStyle($(`#${widgetID}`)[0], null);\n                    opt.backgroundcolor = data.buttonbkcolor;\n                    for (let i = 0; i < viewindex.length; i++) {\n                        const favorite = this.findById(favorites, viewindex[i]);\n\n                        let favimage = favorite.image || '';\n                        let favtext = `${favorite.id || ''}(${i})`;\n                        let attrimage = data[`buttonsImage${i + 1}`] || '';\n                        let attrtext = data[`buttonsText${i + 1}`] || '';\n\n                        favimage = favimage.trim();\n                        favtext = favtext.trim();\n                        attrimage = attrimage.trim();\n                        attrtext = attrtext.trim();\n\n                        const buttonsImage = attrimage || favimage;\n\n                        const buttonsText = attrtext || favtext;\n                        if (attrtext || !buttonsImage) {\n                            $(spans[i]).append(createTextImage(buttonsText, font, picWidth, picHeight, opt));\n                        }\n                    }\n                    const favbtns = $(`input[name=${widgetID}]`);\n                    favbtns.off('change.favorite').on('change.favorite', fdata, function (event) {\n                        const fdata = event.data;\n                        const data = fdata.data;\n                        const favorite = this.value;\n                        const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n                        const state = `${ainstance[0]}.${ainstance[1]}.Players` + `.${playername}.cmdPlayFavorite`;\n                        //vis.conn._socket.emit('setState', state, favorite);\n                        vis.setValue(state, favorite);\n                    });\n                    if (vis.editMode && redrawinspectwidgets) {\n                        vis.binds['squeezeboxrpc'].redrawInspectWidgets(view);\n                    }\n                }.bind(this),\n            );\n        },\n        getFavorites: function (datapoints, ainstance) {\n            const regex = new RegExp(`^${ainstance[0]}\\\\.${ainstance[1]}\\\\.Favorites`, '');\n            return Object.keys(datapoints).reduce(\n                function (acc, cur) {\n                    if (regex.test(cur)) {\n                        const key = cur.split('.')[3];\n                        const name = cur.split('.')[4];\n                        if (!acc[key]) {\n                            acc[key] = {};\n                        }\n                        acc[key][name] = this[cur].val;\n                    }\n                    return acc;\n                }.bind(datapoints),\n                [],\n            );\n        },\n        filterFavorites: function (favorites) {\n            favorites = Object.values(favorites);\n            return favorites.filter(function (cur) {\n                return cur.isaudio === 1;\n            });\n        },\n        findById: function (favorites, id) {\n            return favorites.find(\n                function (cur) {\n                    return cur.id.trim() == this.trim();\n                }.bind(id),\n            );\n        },\n        getViewindex: function (favorites) {\n            return favorites.map(cur => cur.id);\n        },\n        checkViewindexExist: function (viewindex, favorites) {\n            return viewindex.map(function (item) {\n                return favorites.find(el => el.id == item) ? item : '0';\n            });\n        },\n    },\n    players: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            // if nothing found => wait\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].players.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n            data.functionname = 'players';\n            vis.conn._socket.emit(\n                'getObjects',\n                function (err, obj) {\n                    //socket.emit('getObjects', function (err, obj) {\n                    let redrawinspectwidgets = false;\n                    if (data.ainstance) {\n                        data.ainstance = data.ainstance.split('.').slice(0, 2).join('.');\n                    } else {\n                        data.ainstance = '';\n                    }\n\n                    const ainstance = data.ainstance.split('.');\n                    if (!ainstance || ainstance[0] != 'squeezeboxrpc') {\n                        $(`#${widgetID}`).html('Please select an instance');\n                        return;\n                    }\n                    const players = (data.viewindexcheck = this.getPlayers(obj, ainstance));\n\n                    const editmodehelper = data.editmodehelper;\n                    const picWidth = data.picWidth;\n                    const picHeight = data.picHeight;\n                    const opacity = vis.editMode && editmodehelper ? 1 : data.opacity;\n                    const borderwidth = data.borderwidth;\n                    const borderstyle = data.borderstyle;\n                    const bordercolornormal = data.bordercolornormal;\n                    const bordercoloractive = data.bordercoloractive;\n                    const borderradius = data.borderradius;\n                    const buttonmargin = data.buttonmargin || '0px';\n\n                    if (!data.viewindex || data.viewindex.trim() == '') {\n                        data.viewindex = this.getViewindex(players).join(', ');\n                    }\n\n                    data.defaultPlayer = data.defaultPlayer || Object.keys(players)[0] || '0';\n\n                    if (vis.editMode && data.bCount != Math.min(players.length, data.viewindex.split(',').length)) {\n                        data.bCount = Math.min(players.length, data.viewindex.split(',').length);\n                        redrawinspectwidgets = true;\n                    }\n\n                    const viewindex = data.viewindex.split(', ');\n                    if (data.formattype == 'formatselect') {\n                        let text = '';\n                        let option = '';\n                        option += '<option value=\"\"></option>';\n                        for (let i = 0; i < viewindex.length; i++) {\n                            let buttonsText = data[`buttonsText${viewindex[i] + 1}`] || '';\n                            buttonsText = buttonsText.trim() != '' ? buttonsText : players[viewindex[i]];\n                            if (vis.editMode && editmodehelper) {\n                                buttonsText += ` [${viewindex[i]}]`;\n                            }\n\n                            option += `<option value=\"${players[viewindex[i]]}\">${buttonsText}</option>`;\n                        }\n                        text += `<select type=\"text\" id=\"${widgetID}select\">${option}</select>`;\n                        $(`#${widgetID}`).html(text);\n                    }\n                    if (data.formattype == 'formatbutton') {\n                        let text = '';\n\n                        text += '<style>\\n';\n                        text += `#${widgetID} div {\\n`;\n                        text += '     display: inline-block; \\n';\n                        text += '}\\n';\n                        text += `#${widgetID} div div {\\n`;\n                        text += '     position: relative; \\n';\n                        text += `     margin: 0px ${buttonmargin} ${buttonmargin} 0px; \\n`;\n                        text += '}\\n';\n                        text += `#${widgetID} input[type=\"radio\"] {\\n`;\n                        text += '    display: none;\\n';\n                        text += '}\\n';\n                        text += `#${widgetID} img {\\n`;\n                        text += `    opacity: ${opacity};\\n`;\n                        text += `    width: ${picWidth}px;\\n`;\n                        text += `    height: ${picHeight}px;\\n`;\n                        text += `    border: ${borderwidth} ${borderstyle} ${bordercolornormal};\\n`;\n                        text += `    border-radius: ${borderradius};\\n`;\n                        text += '}\\n';\n                        text += `#${widgetID} canvas {\\n`;\n                        text += `    opacity: ${opacity};\\n`;\n                        text += `    width: ${picWidth}px;\\n`;\n                        text += `    height: ${picHeight}px;\\n`;\n                        text += `    border: ${borderwidth} ${borderstyle} ${bordercolornormal};\\n`;\n                        text += `    border-radius: ${borderradius};\\n`;\n                        text += '}\\n';\n                        text += `#${widgetID} img:active {\\n`;\n                        text += '    transform: scale(0.9, 0.9);\\n';\n                        text += '    opacity: 1;\\n';\n                        text += `    border: ${borderwidth} ${borderstyle} ${bordercoloractive};\\n`;\n                        text += `    border-radius: ${borderradius};\\n`;\n                        text += '}\\n';\n                        text += `#${widgetID} canvas:active {\\n`;\n                        text += '    transform: scale(0.9, 0.9);\\n';\n                        text += '    opacity: 1;\\n';\n                        text += `    border: ${borderwidth} ${borderstyle} ${bordercoloractive};\\n`;\n                        text += `    border-radius: ${borderradius};\\n`;\n                        text += '}\\n';\n                        text += `#${widgetID} input[type=\"radio\"]:checked + label img {\\n`;\n                        text += '    opacity: 1;\\n';\n                        text += `    border: ${borderwidth} ${borderstyle} ${bordercoloractive};\\n`;\n                        text += `    border-radius: ${borderradius};\\n`;\n                        text += '}\\n';\n                        text += `#${widgetID} input[type=\"radio\"]:checked + label canvas {\\n`;\n                        text += '    opacity: 1;\\n';\n                        text += `    border: ${borderwidth} ${borderstyle} ${bordercoloractive};\\n`;\n                        text += `    border-radius: ${borderradius};\\n`;\n                        text += '}\\n';\n                        text += '</style>\\n';\n\n                        text += `<div id=\"${widgetID}container\" >`;\n\n                        for (let i = 0; i < viewindex.length; i++) {\n                            text += '  <div >';\n                            text += `    <input type=\"radio\" id=\"${widgetID}${players[viewindex[i]]}\" name=\"${\n                                widgetID\n                            }\" value=\"${players[viewindex[i]]}\" ${\n                                viewindex[i] == data.defaultPlayer ? 'checked' : ''\n                            }>`;\n                            text += `    <label for=\"${widgetID}${players[viewindex[i]]}\">`;\n                            text += '      <span>';\n                            const buttonsImage = data[`buttonsImage${parseInt(viewindex[i]) + 1}`] || '';\n                            if (buttonsImage.trim() != '') {\n                                text += `        <img src=\"${data[`buttonsImage${parseInt(viewindex[i]) + 1}`]}\">`;\n                            }\n                            text += '      </span>';\n                            text += '    </label>';\n                            if (vis.editMode && editmodehelper) {\n                                text += `<div style=\"position: absolute;top: 0;right: 0;background-color: black;color: white;border-width: 1px;border-color: white;border-style: solid;font-size: xx-small;padding: 1px;margin:0px;\">${\n                                    viewindex[i]\n                                }</div>`;\n                            }\n                            text += '  </div>';\n                        }\n                        text += '</div>';\n\n                        $(`#${widgetID}`).html(text);\n\n                        const spans = $(`#${widgetID} span`);\n                        const font = new Font($(`#${widgetID}`));\n                        const opt = {};\n                        opt.wrapCamelCase = data.wrapcamelcase;\n                        opt.style = window.getComputedStyle($(`#${widgetID}`)[0], null);\n                        opt.backgroundcolor = data.buttonbkcolor;\n                        for (let i = 0; i < viewindex.length; i++) {\n                            const buttonsImage = data[`buttonsImage${parseInt(viewindex[i]) + 1}`] || '';\n                            let buttonsText = data[`buttonsText${parseInt(viewindex[i]) + 1}`] || '';\n                            buttonsText = buttonsText.trim() != '' ? buttonsText : players[viewindex[i]];\n                            if (buttonsImage.trim() == '') {\n                                $(spans[i]).append(createTextImage(buttonsText, font, picWidth, picHeight, opt));\n                            }\n                        }\n                    }\n                    if (vis.editMode && redrawinspectwidgets) {\n                        vis.binds['squeezeboxrpc'].redrawInspectWidgets(view);\n                    }\n                    $(`#${widgetID}`).trigger('playerschanged');\n                }.bind(this),\n            );\n        },\n        getViewindex: function (players) {\n            return Object.keys(players);\n        },\n        checkViewindexExist: function (viewindex, players) {\n            return viewindex.map(function (item) {\n                return item < players.length ? item : 0;\n            });\n        },\n        getPlayers: function (datapoints, ainstance) {\n            const regex = new RegExp(`^${ainstance[0]}\\\\.${ainstance[1]}\\\\.Players`, 'gm');\n            return Object.keys(datapoints).reduce(function (acc, cur) {\n                if (regex.test(cur)) {\n                    const key = cur.split('.')[3]; //getPlayers\n                    if (acc.indexOf(key) === -1) {\n                        acc.push(key);\n                    }\n                }\n                return acc;\n            }, []);\n        },\n    },\n    buttonplay: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].buttonplay.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function () {\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.state`);\n                    }\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n\n            let text = '';\n            text += '<style> \\n';\n            text += `#${widgetID} div {\\n`;\n            text += '   display: inline-block; \\n';\n            text += '   width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} input[type=\"submit\"] { \\n`;\n            text += '  display: none; \\n';\n            text += '} \\n';\n            text += `#${widgetID} img { \\n`;\n            text += '  width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} img:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg { \\n`;\n            text += '  width:  100%; \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '  transform-origin: 50% 50%; \\n';\n            text += '} \\n';\n            text += '</style> \\n';\n\n            text += '<div class=\"btn\"> \\n';\n            text += '  <div> \\n';\n            text += `    <input type=\"submit\" id=\"${widgetID}button\" name=\"${widgetID}\" value=\"\" >`;\n            text += '    <span> \\n';\n            text += '      <img src=\"\"> \\n';\n            text += '    </span> \\n';\n            text += '  </div> \\n';\n            text += '</div> \\n';\n\n            $(`#${widgetID}`).html(text);\n            this.setState(fdata);\n        },\n        onClick: function (event) {\n            const data = event.data.data;\n            const widgetID = event.data.widgetID;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.state`;\n            let state = $(`input[name=${widgetID}]`).val();\n            state = state == 1 ? 0 : 1;\n            vis.setValue(stateid, state);\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const svg = vis.binds['squeezeboxrpc'].svg;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].buttonplay.setState(fdata);\n                }, 100);\n            }\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.state`;\n\n            const state =\n                vis.states[`${stateid}.val`] || vis.states[`${stateid}.val`] === 0\n                    ? parseInt(vis.states[`${stateid}.val`])\n                    : 2;\n            const imagepause = data.imagepause || '';\n            const imageplay = data.imageplay || '';\n            const imagestop = data.imagepause || '';\n\n            const svgfill = data.fillcolor || '#ffffff';\n            const svgstroke = data.strokecolor || '#ffffff';\n            const svgstrokeWidth = data.strokewidth || '0.3';\n\n            let image = '';\n            //0=pause\n            //1=play\n            //2=stop\n            if (state == 0) {\n                image = imageplay || svg.play;\n            }\n            if (state == 1) {\n                image = imagepause || svg.pause;\n            }\n            if (state == 2) {\n                image = imagestop || svg.play;\n            }\n            $(`#${widgetID} input`).val(state);\n            $(`#${widgetID} img`).off('click.play', this.onClick);\n            $(`#${widgetID} svg`).off('click.play', this.onClick);\n            if (image.startsWith('<svg')) {\n                $(`#${widgetID} span`).html(image);\n                const $g = $(`#${widgetID} svg > g`);\n                if ($g.length) {\n                    $g.attr('fill', svgfill);\n                    $g.attr('stroke', svgstroke);\n                    $g.attr('stroke-width', svgstrokeWidth);\n                }\n            } else {\n                $(`#${widgetID} img`).attr('src', image);\n            }\n            $(`#${widgetID} img`).on('click.play', fdata, this.onClick);\n            $(`#${widgetID} svg`).on('click.play', fdata, this.onClick);\n        },\n    },\n    buttonfwd: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].buttonfwd.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const svgfill = data.fillcolor || '#ffffff';\n            const svgstroke = data.strokecolor || '#ffffff';\n            const svgstrokeWidth = data.strokewidth || '0.3';\n\n            const svg = vis.binds['squeezeboxrpc'].svg;\n\n            let text = '';\n            text += '<style> \\n';\n            text += `#${widgetID} div {\\n`;\n            text += '   display: inline-block; \\n';\n            text += '   width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} input[type=\"submit\"] { \\n`;\n            text += '  display: none; \\n';\n            text += '} \\n';\n            text += `#${widgetID} img { \\n`;\n            text += '  width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} img:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg { \\n`;\n            text += '  width:  100%; \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '  transform-origin: 50% 50%; \\n';\n            text += '} \\n';\n            text += '</style> \\n';\n            text += '<div class=\"btn\"> \\n';\n            text += '  <div> \\n';\n            text += `    <input type=\"submit\" id=\"${widgetID}button\" name=\"${widgetID}\" value=\"fwd\" >`;\n            text += '    <span> \\n';\n            text += '      <img src=\"widgets/squeezeboxrpc/img/fwd.png\"> \\n';\n            text += '    </span> \\n';\n            text += '  </div> \\n';\n            text += '</div> \\n';\n\n            $(`#${widgetID}`).html(text);\n\n            const image = data.imagefwd || svg.fwd;\n\n            if (image.startsWith('<svg')) {\n                $(`#${widgetID} span`).html(image);\n                const $g = $(`#${widgetID} svg > g`);\n                if ($g.length) {\n                    $g.attr('fill', svgfill);\n                    $g.attr('stroke', svgstroke);\n                    $g.attr('stroke-width', svgstrokeWidth);\n                }\n            } else {\n                $(`#${widgetID} img`).attr('src', image);\n            }\n\n            //one onclick on span?\n            $(`#${widgetID} img`).on(\n                'click',\n                { self: this, widgetID: widgetID, view: view, data: data, style: style },\n                this.onClick,\n            );\n            $(`#${widgetID} svg`).on(\n                'click',\n                { self: this, widgetID: widgetID, view: view, data: data, style: style },\n                this.onClick,\n            );\n        },\n        onClick: function (event) {\n            const data = event.data.data;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.btnForward`;\n            const state = true;\n            vis.setValue(stateid, state);\n        },\n    },\n    buttonrew: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].buttonrew.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const svgfill = data.fillcolor || '#ffffff';\n            const svgstroke = data.strokecolor || '#ffffff';\n            const svgstrokeWidth = data.strokewidth || '0.3';\n\n            const svg = vis.binds['squeezeboxrpc'].svg;\n\n            let text = '';\n            text += '<style> \\n';\n            text += `#${widgetID} div {\\n`;\n            text += '   display: inline-block; \\n';\n            text += '   width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} input[type=\"submit\"] { \\n`;\n            text += '  display: none; \\n';\n            text += '} \\n';\n            text += `#${widgetID} img { \\n`;\n            text += '  width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} img:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg { \\n`;\n            text += '  width:  100%; \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '  transform-origin: 50% 50%; \\n';\n            text += '} \\n';\n            text += '</style> \\n';\n            text += '<div class=\"btn\"> \\n';\n            text += '  <div> \\n';\n            text += `    <input type=\"submit\" id=\"${widgetID}button\" name=\"${widgetID}\" value=\"rew\" >`;\n            text += '    <span> \\n';\n            text += '      <img src=\"widgets/squeezeboxrpc/img/rew.svg\"> \\n';\n            text += '    </span> \\n';\n            text += '  </div> \\n';\n            text += '</div> \\n';\n\n            $(`#${widgetID}`).html(text);\n\n            const image = data.imagerew || svg.rew;\n\n            if (image.startsWith('<svg')) {\n                $(`#${widgetID} span`).html(image);\n                const $g = $(`#${widgetID} svg > g`);\n                if ($g.length) {\n                    $g.attr('fill', svgfill);\n                    $g.attr('stroke', svgstroke);\n                    $g.attr('stroke-width', svgstrokeWidth);\n                }\n            } else {\n                $(`#${widgetID} img`).attr('src', image);\n            }\n\n            //one onclick on span?\n            $(`#${widgetID} img`).on(\n                'click',\n                { self: this, widgetID: widgetID, view: view, data: data, style: style },\n                this.onClick,\n            );\n            $(`#${widgetID} svg`).on(\n                'click',\n                { self: this, widgetID: widgetID, view: view, data: data, style: style },\n                this.onClick,\n            );\n        },\n        onClick: function (event) {\n            const data = event.data.data;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.btnRewind`;\n            const state = true;\n            vis.setValue(stateid, state);\n        },\n    },\n    buttonrepeat: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].buttonrepeat.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function () {\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.PlaylistRepeat`);\n                    }\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n\n            let text = '';\n            text += '<style> \\n';\n            text += `#${widgetID} div {\\n`;\n            text += '   display: inline-block; \\n';\n            text += '   width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} input[type=\"submit\"] { \\n`;\n            text += '  display: none; \\n';\n            text += '} \\n';\n            text += `#${widgetID} img { \\n`;\n            text += '  width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} img:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg { \\n`;\n            text += '  width:  100%; \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '  transform-origin: 50% 50%; \\n';\n            text += '} \\n';\n            text += '</style> \\n';\n\n            text += '<div class=\"btn\"> \\n';\n            text += '  <div> \\n';\n            text += `    <input type=\"submit\" id=\"${widgetID}button\" name=\"${widgetID}\" value=\"\" >`;\n            text += '    <span> \\n';\n            text += '      <img src=\"\"> \\n';\n            text += '    </span> \\n';\n            text += '  </div> \\n';\n            text += '</div> \\n';\n\n            $(`#${widgetID}`).html(text);\n            this.setState({ self: this, widgetID: widgetID, view: view, data: data, style: style });\n        },\n        onClick: function (event) {\n            const data = event.data.data;\n            const widgetID = event.data.widgetID;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.PlaylistRepeat`;\n            let state = $(`input[name=${widgetID}]`).val();\n            state = state > 1 ? 0 : parseInt(state) + 1;\n            vis.setValue(stateid, state);\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const svg = vis.binds['squeezeboxrpc'].svg;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].buttonrepeat.setState(fdata);\n                }, 100);\n            }\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.PlaylistRepeat`;\n\n            const state =\n                vis.states[`${stateid}.val`] || vis.states[`${stateid}.val`] === 0\n                    ? parseInt(vis.states[`${stateid}.val`])\n                    : 0;\n            const imagerepeat0 = data.imagerepeat0 || '';\n            const imagerepeat1 = data.imagerepeat1 || '';\n            const imagerepeat2 = data.imagerepeat2 || '';\n\n            const svgfill = data.fillcolor || '#ffffff';\n            const svgstroke = data.strokecolor || '#ffffff';\n            const svgstrokeWidth = data.strokewidth || '0.3';\n\n            let image = '';\n            //0=pause\n            //1=play\n            //2=stop\n            if (state == 0) {\n                image = imagerepeat0 || svg.repeat0;\n            }\n            if (state == 1) {\n                image = imagerepeat1 || svg.repeat1;\n            }\n            if (state == 2) {\n                image = imagerepeat2 || svg.repeat0;\n            }\n            $(`#${widgetID} input`).val(state);\n            $(`#${widgetID} img`).off('click.repeat', this.onClick);\n            $(`#${widgetID} svg`).off('click.repeat', this.onClick);\n            if (image.startsWith('<svg')) {\n                $(`#${widgetID} span`).html(image);\n                const $g = $(`#${widgetID} svg > g`);\n                if ($g.length) {\n                    $g.attr('fill', svgfill);\n                    $g.attr('stroke', svgstroke);\n                    $g.attr('stroke-width', svgstrokeWidth);\n                    if (state === 0) {\n                        $g.attr('opacity', '.5');\n                    } else {\n                        $g.attr('opacity', '1');\n                    }\n                }\n            } else {\n                $(`#${widgetID} img`).attr('src', image);\n            }\n            $(`#${widgetID} img`).on('click.repeat', fdata, this.onClick);\n            $(`#${widgetID} svg`).on('click.repeat', fdata, this.onClick);\n        },\n    },\n    buttonshuffle: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].buttonshuffle.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            let text = '';\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function () {\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.PlaylistShuffle`);\n                    }\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n\n            text += '<style> \\n';\n            text += `#${widgetID} div {\\n`;\n            text += '   display: inline-block; \\n';\n            text += '   width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} input[type=\"submit\"] { \\n`;\n            text += '  display: none; \\n';\n            text += '} \\n';\n            text += `#${widgetID} img { \\n`;\n            text += '  width:  100%; \\n';\n\n            text += '} \\n';\n            text += `#${widgetID} img:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg { \\n`;\n            text += '  width:  100%; \\n';\n            text += '} \\n';\n            text += `#${widgetID} svg:active { \\n`;\n            text += '  transform: scale(0.9, 0.9); \\n';\n            text += '  transform-origin: 50% 50%; \\n';\n            text += '} \\n';\n            text += '</style> \\n';\n\n            text += '<div class=\"btn\"> \\n';\n            text += '  <div> \\n';\n            text += `    <input type=\"submit\" id=\"${widgetID}button\" name=\"${widgetID}\" value=\"\" >`;\n            text += '    <span> \\n';\n            text += '      <img src=\"\"> \\n';\n            text += '    </span> \\n';\n            text += '  </div> \\n';\n            text += '</div> \\n';\n\n            $(`#${widgetID}`).html(text);\n            this.setState({ self: this, widgetID: widgetID, view: view, data: data, style: style });\n        },\n        onClick: function (event) {\n            const data = event.data.data;\n            const widgetID = event.data.widgetID;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.PlaylistShuffle`;\n            let state = $(`input[name=${widgetID}]`).val();\n            state = state > 1 ? 0 : parseInt(state) + 1;\n            vis.setValue(stateid, state);\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const svg = vis.binds['squeezeboxrpc'].svg;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].buttonshuffle.setState(fdata);\n                }, 100);\n            }\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.PlaylistShuffle`;\n\n            const state =\n                vis.states[`${stateid}.val`] || vis.states[`${stateid}.val`] === 0\n                    ? parseInt(vis.states[`${stateid}.val`])\n                    : 0;\n            const imageshuffle0 = data.imageshuffle0 || '';\n            const imageshuffle1 = data.imageshuffle1 || '';\n            const imageshuffle2 = data.imageshuffle2 || '';\n\n            const svgfill = data.fillcolor || '#ffffff';\n            const svgstroke = data.strokecolor || '#ffffff';\n            const svgstrokeWidth = data.strokewidth || '0.3';\n\n            let image = '';\n            //0=pause\n            //1=play\n            //2=stop\n            if (state == 0) {\n                image = imageshuffle0 || svg.shuffle0;\n            }\n            if (state == 1) {\n                image = imageshuffle1 || svg.shuffle0;\n            }\n            if (state == 2) {\n                image = imageshuffle2 || svg.shuffle2;\n            }\n            $(`#${widgetID} input`).val(state);\n            $(`#${widgetID} img`).off('click.shuffle', this.onClick);\n            $(`#${widgetID} svg`).off('click.shuffle', this.onClick);\n            if (image.startsWith('<svg')) {\n                $(`#${widgetID} span`).html(image);\n                const $g = $(`#${widgetID} svg > g`);\n                if ($g.length) {\n                    $g.attr('fill', svgfill);\n                    $g.attr('stroke', svgstroke);\n                    $g.attr('stroke-width', svgstrokeWidth);\n                    if (state === 0) {\n                        $g.attr('opacity', '.5');\n                    } else {\n                        $g.attr('opacity', '1');\n                    }\n                }\n            } else {\n                $(`#${widgetID} img`).attr('src', image);\n            }\n            $(`#${widgetID} img`).on('click.shuffle', fdata, this.onClick);\n            $(`#${widgetID} svg`).on('click.shuffle', fdata, this.onClick);\n        },\n    },\n    volumebar: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].volumebar.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = {\n                self: this,\n                widgetID: widgetID,\n                view: view,\n                data: data,\n                style: style,\n                ainstance: ainstance,\n            };\n            //if ($('#' + data.widgetPlayer).length>0) this.playersChanged({data:fdata});\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function () {\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.Volume`);\n                    }\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n\n            const calctype = data.calctype || 'segstep';\n            const segments = data.segments || 11;\n            const position = data.position || 'vertical';\n            let segheight, segwidth;\n            if (position == 'vertical') {\n                segheight = data.segheight || '100%';\n                segwidth = data.segwidth || '100%';\n            } else {\n                segheight = data.segheight || '100%';\n                segwidth = data.segwidth || '20px';\n            }\n            const borderwidth = data.borderwidth || '1px';\n            const bordercolornormal = data.bordercolornormal || '#909090';\n            const bordercoloractive = data.bordercoloractive || '#87ceeb';\n            const fillcolornormal = data.fillcolornormal || '#005000';\n            const fillcoloractive = data.fillcoloractive || '#00ff00';\n            const reverse = data.reverse || false;\n            const margin = data.margin || '1px';\n\n            data.calctype = calctype;\n            data.segments = segments;\n            data.position = position;\n\n            data.segheight = segheight;\n            data.segwidth = segwidth;\n            data.borderwidth = borderwidth;\n            data.bordercolornormal = bordercolornormal;\n            data.bordercoloractive = bordercoloractive;\n            data.fillcolornormal = fillcolornormal;\n            data.fillcoloractive = fillcoloractive;\n            data.reverse = reverse;\n            data.margin = margin;\n\n            let text = '';\n            text += '<style> \\n';\n            text += `    #${widgetID} .volume { \\n`;\n            text += '        box-sizing: border-box; \\n';\n            text += '        display: inline-block; \\n';\n            text += '        font-size:0px; \\n';\n            text += '        width: 100%; \\n';\n            text += '        height: 100%; \\n';\n            text += '        overflow: visible; \\n';\n            if (position == 'horizontal') {\n                text += '        white-space: nowrap; \\n';\n            }\n            text += '    } \\n';\n            text += `    #${widgetID} .level { \\n`;\n            text += '        box-sizing: border-box; \\n';\n            text += '        display: inline-block; \\n';\n            text += `        outline: ${borderwidth} solid ${bordercolornormal}; \\n`;\n            if (position == 'horizontal') {\n                text += `        height: calc(100% - ( 2 * ${margin} )); \\n`;\n                text += `        width: calc((100% / ${segments}) - ( 2 * ${margin} )); \\n`;\n            }\n            if (position == 'vertical') {\n                text += `        height: calc((100% / ${segments}) - ( 2 * ${margin} )); \\n`;\n                text += `        width: calc(100% - ( 2 * ${margin} )); \\n`;\n            }\n            text += `        background-color: ${fillcolornormal}; \\n`;\n            text += `        margin: ${margin};         \\n`;\n            text += '    } \\n';\n            text += `    #${widgetID} .active { \\n`;\n            text += `        border-color: ${bordercoloractive}; \\n`;\n            text += `        background-color: ${fillcoloractive}; \\n`;\n            text += '    } \\n';\n            text += '</style> \\n';\n\n            text += '<div class=\"volume\"> \\n';\n            for (let i = 0; i < segments; i++) {\n                text += `    <div class=\"level\" value=\"${i}\"></div> \\n`;\n            }\n            text += '</div> \\n';\n            $(`#${widgetID}`).html(text);\n            $(`#${widgetID} div.volume`).on('click.volume', fdata, this.onClick);\n            if (vis.editMode) {\n                this.setState(fdata);\n            }\n            if (vis.editMode) {\n                vis.inspectWidgets(view, view);\n            }\n        },\n        onClick: function (event) {\n            const offset = $(this).offset();\n            const x = event.pageX - offset.left;\n            const y = event.pageY - offset.top;\n\n            const data = event.data.data;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.Volume`;\n\n            let pos;\n            let high;\n            let segstep;\n            let state;\n            data.position == 'horizontal' ? (pos = x) : (pos = y);\n            data.position == 'horizontal' ? (high = this.scrollWidth) : (high = this.scrollHeight);\n            if (data.reverse) {\n                pos = high - pos;\n            }\n\n            if (data.calctype == 'exact') {\n                segstep = high / data.segments;\n                pos = pos - segstep < 0 ? 0 : pos - segstep;\n                state = (pos * 100) / (high - segstep);\n            }\n            if (data.calctype == 'segstep') {\n                const level = Math.floor(pos / (high / data.segments));\n                state = Math.floor((100 / (data.segments - 1)) * level);\n            }\n\n            vis.setValue(stateid, state);\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const reverse = data.reverse;\n            let level;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].volumebar.setState(fdata);\n                }, 100);\n            }\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.Volume`;\n            let state =\n                vis.states[`${stateid}.val`] || vis.states[`${stateid}.val`] === 0 ? vis.states[`${stateid}.val`] : 0;\n            if (vis.editMode) {\n                state = 50;\n            }\n\n            if (data.calctype == 'exact') {\n                level = Math.ceil(state / (100 / (data.segments - 1))) + 1;\n            }\n            if (data.calctype == 'segstep') {\n                level = Math.round(state / (100 / (data.segments - 1))) + 1;\n            }\n            const selector = reverse\n                ? `#${widgetID} div.volume > div.level:nth-last-child(-n+${level})`\n                : `#${widgetID} div.volume > div.level:nth-child(-n+${level})`;\n            $(`#${widgetID} div.volume > div.level`).removeClass('active');\n            $(selector).addClass('active');\n        },\n    },\n\n    syncgroup: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            // if nothing found => wait\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].syncgroup.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function (fdata) {\n                    const widgetID = fdata.widgetID;\n                    const view = fdata.view;\n                    const data = fdata.data;\n                    const style = fdata.style;\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.PlayerID`);\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.SyncMaster`);\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.SyncSlaves`);\n                    }\n                    setTimeout(function () {\n                        vis.binds['squeezeboxrpc'].syncgroup.createWidget(widgetID, view, data, style);\n                    }, 100);\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n\n            if (vis.binds['squeezeboxrpc'].getPlayerWidgetType(view, data.widgetPlayer) == 'formatselect') {\n                $div.html('Only Player formattype button is supported');\n                return false;\n            }\n\n            const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n\n            const dataplayer = vis.views[view].widgets[data.widgetPlayer].data;\n\n            const picWidth = dataplayer.picWidth;\n            const picHeight = dataplayer.picHeight;\n            const borderwidth = data.borderwidth;\n            const borderstyle = data.borderstyle;\n            const bordercolornogroup = data.bordercolornogroup;\n            const bordercolorowngroup = data.bordercolorowngroup;\n            const bordercolorothergroup = data.bordercolorothergroup;\n            const borderradius = data.borderradius;\n            const buttonmargin = data.buttonmargin || '0px';\n\n            let text = '';\n            text += '<style>\\n';\n            text += `#${widgetID} div {\\n`;\n            text += '     display: inline-block; \\n';\n            text += '}\\n';\n            text += `#${widgetID} div div {\\n`;\n            text += '     position: relative; \\n';\n            text += `     margin: 0px ${buttonmargin} ${buttonmargin} 0px; \\n`;\n            text += '}\\n';\n            text += `#${widgetID} input[type=\"checkbox\"] {\\n`;\n            text += '    display: none;\\n';\n            text += '}\\n';\n            text += `#${widgetID} canvas {\\n`;\n            text += '    opacity: 1;\\n';\n            text += `    width: ${picWidth}px;\\n`;\n            text += `    height: ${picHeight}px;\\n`;\n            text += `    border: ${borderwidth} ${borderstyle} ${bordercolornogroup};\\n`;\n            text += `    border-radius: ${borderradius};\\n`;\n            text += '}\\n';\n            text += `#${widgetID} canvas:active {\\n`;\n            text += '    transform: scale(0.9, 0.9);\\n';\n            text += '    opacity: 1;\\n';\n            text += `    border: ${borderwidth} ${borderstyle} ${bordercolorowngroup};\\n`;\n            text += `    border-radius: ${borderradius};\\n`;\n            text += '}\\n';\n            text += `#${widgetID} input[type=\"checkbox\"]:checked + label img {\\n`;\n            text += '    opacity: 1;\\n';\n            text += `    border: ${borderwidth} ${borderstyle} ${bordercolorowngroup};\\n`;\n            text += `    border-radius: ${borderradius};\\n`;\n            text += '}\\n';\n            text += `#${widgetID} input[type=\"checkbox\"]:checked + label canvas {\\n`;\n            text += '    opacity: 1;\\n';\n            text += `    border: ${borderwidth} ${borderstyle} ${bordercolorowngroup};\\n`;\n            text += `    border-radius: ${borderradius};\\n`;\n            text += '}\\n';\n            text += `#${widgetID} input[type=\"checkbox\"][othergroup=\"true\"] + label img {\\n`;\n            text += '    opacity: 1;\\n';\n            text += `    border: ${borderwidth} ${borderstyle} ${bordercolorothergroup};\\n`;\n            text += `    border-radius: ${borderradius};\\n`;\n            text += '}\\n';\n            text += `#${widgetID} input[type=\"checkbox\"][othergroup=\"true\"] + label canvas {\\n`;\n            text += '    opacity: 1;\\n';\n            text += `    border: ${borderwidth} ${borderstyle} ${bordercolorothergroup};\\n`;\n            text += `    border-radius: ${borderradius};\\n`;\n            text += '}\\n';\n            text += '</style>\\n';\n\n            text += `<div id=\"${widgetID}container\" >`;\n            let valid = false;\n            for (let i = 0; i < players.length; i++) {\n                const stateid = `${data.ainstance.join('.')}.Players` + `.${players[i]}.PlayerID`;\n                const playerid =\n                    vis.states[`${stateid}.val`] || vis.states[`${stateid}.val`] === 0\n                        ? vis.states[`${stateid}.val`]\n                        : '';\n                valid = valid || playerid;\n                text += '  <div>';\n                text += `    <input type=\"checkbox\" id=\"${widgetID}${players[i]}\" name=\"${widgetID}\" playername=\"${\n                    players[i]\n                }\" value=\"${playerid}\" disabled>`;\n                text += `    <label for=\"${widgetID}${players[i]}\">`;\n                text += '      <span>';\n                text += '      <canvas></canvas>';\n                text += '      </span>';\n                text += '    </label>';\n                text += '  </div>';\n            }\n            if (!valid) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].syncgroup.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n            text += '</div>';\n            $(`#${widgetID}`).html(text);\n\n            for (let i = 0; i < players.length; i++) {\n                const elemp = $(`#${data.widgetPlayer} input[value=\"${players[i]}\"]  + label span :first-child`);\n                const elems = $(`#${widgetID}${players[i]} + label span canvas`);\n                elems[0].height = elemp.height();\n                elems[0].width = elemp.width();\n\n                const destCtx = elems[0].getContext('2d');\n                destCtx.drawImage(elemp[0], 0, 0, elemp.width(), elemp.height());\n            }\n\n            const syncgroupbtns = $(`input[name=${widgetID}]`);\n            syncgroupbtns.off('change.syncgroup').on('change.syncgroup', fdata, function (event) {\n                const fdata = event.data;\n                const data = fdata.data;\n                const self = fdata.self;\n                const syncplayer = this.value;\n                const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n                const syncplayername = $(this).attr('playername');\n                let stateid;\n                if (syncplayer) {\n                    if (!$(this).prop('checked')) {\n                        stateid = `${ainstance[0]}.${ainstance[1]}.Players` + `.${syncplayername}.cmdGeneral`;\n                        vis.setValue(stateid, '\"sync\",\"-\"');\n                    } else {\n                        stateid = `${ainstance[0]}.${ainstance[1]}.Players` + `.${playername}.cmdGeneral`;\n                        vis.setValue(stateid, `\"sync\",\"${syncplayer}\"`);\n                    }\n                }\n                self.setState(fdata);\n            });\n        },\n        onChange: function (e, newVal, oldVal) {\n            console.log(`${e.type}: ${newVal}, ${oldVal}`);\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n\n            const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n            const syncgroups = [];\n            for (let ip = 0; ip < players.length; ip++) {\n                const playername = players[ip];\n                const stateid1 = `${data.ainstance.join('.')}.Players` + `.${playername}.SyncMaster`;\n                const stateid2 = `${data.ainstance.join('.')}.Players` + `.${playername}.SyncSlaves`;\n                const state1 =\n                    vis.states[`${stateid1}.val`] || vis.states[`${stateid1}.val`] === 0\n                        ? vis.states[`${stateid1}.val`]\n                        : '';\n                const state2 =\n                    vis.states[`${stateid2}.val`] || vis.states[`${stateid2}.val`] === 0\n                        ? vis.states[`${stateid2}.val`]\n                        : '';\n                let state = state1.split(',').concat(state2.split(','));\n                state = state.filter(item => item != '');\n                if (Array.isArray(state)) {\n                    if (\n                        !syncgroups.reduce(function (acc, val) {\n                            return state[0] == '' || state.length == 0 || acc || val.includes(state[0]);\n                        }, false)\n                    ) {\n                        syncgroups.push(state);\n                    }\n                }\n            }\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].syncgroup.setState(fdata);\n                }, 100);\n            }\n            const stateid1 = `${data.ainstance.join('.')}.Players` + `.${playername}.SyncMaster`;\n            const stateid2 = `${data.ainstance.join('.')}.Players` + `.${playername}.SyncSlaves`;\n            const stateid3 = `${data.ainstance.join('.')}.Players` + `.${playername}.PlayerID`;\n            const state1 =\n                vis.states[`${stateid1}.val`] || vis.states[`${stateid1}.val`] === 0\n                    ? vis.states[`${stateid1}.val`]\n                    : '';\n            const state2 =\n                vis.states[`${stateid2}.val`] || vis.states[`${stateid2}.val`] === 0\n                    ? vis.states[`${stateid2}.val`]\n                    : '';\n            const state3 =\n                vis.states[`${stateid3}.val`] || vis.states[`${stateid3}.val`] === 0\n                    ? vis.states[`${stateid3}.val`]\n                    : '';\n            let owngroup = null;\n            for (let i = 0; i < syncgroups.length; i++) {\n                if (syncgroups[i].includes(state3)) {\n                    owngroup = i;\n                    break;\n                }\n            }\n            let state = state1.split(',').concat(state2.split(','));\n            state = state.filter(item => item != '');\n            for (let ip = 0; ip < players.length; ip++) {\n                const playerbutton = players[ip];\n                const playerstateid = `${data.ainstance.join('.')}.Players` + `.${playerbutton}.PlayerID`;\n                const playerid =\n                    vis.states[`${playerstateid}.val`] || vis.states[`${playerstateid}.val`] === 0\n                        ? vis.states[`${playerstateid}.val`]\n                        : '';\n                let playergroup = null;\n                for (let is = 0; is < syncgroups.length; is++) {\n                    if (syncgroups[is].includes(playerid)) {\n                        playergroup = is;\n                        break;\n                    }\n                }\n\n                const $btn = $(`input[id=${widgetID}${playerbutton}]`);\n                if (state.includes(playerid) && playerid !== state3) {\n                    $btn.prop('checked', true);\n                } else {\n                    $btn.prop('checked', false);\n                }\n                if (playerid == state3) {\n                    $btn.prop('disabled', true);\n                } else {\n                    $btn.prop('disabled', false);\n                }\n                if (playergroup != null && playergroup != owngroup) {\n                    $btn.attr('othergroup', true);\n                } else {\n                    $btn.attr('othergroup', false);\n                }\n            }\n        },\n    },\n    playtime: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].playtime.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function () {\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.Duration`);\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.Time`);\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.state`);\n                        boundstates.push(`${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.cmdGoTime`);\n                    }\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n\n            const mainbarcolor = data.mainbarcolor;\n            const playtimebarcolor = data.playtimebarcolor;\n            const borderwidth = data.borderwidth;\n            const borderstyle = data.borderstyle;\n            const bordercolor = data.bordercolor;\n            const borderradius = data.borderradius;\n\n            let text = '';\n            text += '<style> \\n';\n            text += `#${widgetID} .playtimemain {\\n`;\n            text += '    width: 100%;\\n';\n            text += '    height: 100%;\\n';\n            text += `    background-color: ${mainbarcolor};\\n`;\n            text += `    border: ${bordercolor} ${borderwidth} ${borderstyle};\\n`;\n            text += `    border-radius: ${borderradius};\\n`;\n            text += '    overflow: hidden;\\n';\n            text += '}';\n\n            text += `#${widgetID} .playtimebar {\\n`;\n            text += '  height: 100%;\\n';\n            text += `  background-color: ${playtimebarcolor};\\n`;\n            text += '}\\n';\n            text += '</style> \\n';\n\n            text += '<div class=\"playtimemain\">\\n';\n            text += '    <div class=\"playtimebar\"></div>\\n';\n            text += '</div>\\n';\n\n            $(`#${widgetID}`).html(text);\n            $(`#${widgetID} div.playtimemain`).on('click.playtime', fdata, this.onClick);\n\n            this.setState(fdata);\n        },\n        onClick: function (event) {\n            const data = event.data.data;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            const stateid_duration = `${data.ainstance.join('.')}.Players` + `.${playername}.Duration`;\n            const stateid_gotime = `${data.ainstance.join('.')}.Players` + `.${playername}.cmdGoTime`;\n\n            const state_duration =\n                vis.states[`${stateid_duration}.val`] || vis.states[`${stateid_duration}.val`] === 0\n                    ? parseInt(vis.states[`${stateid_duration}.val`])\n                    : 0;\n            const clickx = event.offsetX;\n            const width = $(this).width();\n\n            const time = (clickx / width) * state_duration;\n            if (time > state_duration) {\n                return;\n            }\n            vis.setValue(stateid_gotime, time.toString());\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].playtime.setState(fdata);\n                }, 100);\n            }\n            const stateid_duration = `${data.ainstance.join('.')}.Players` + `.${playername}.Duration`;\n            const stateid_state = `${data.ainstance.join('.')}.Players` + `.${playername}.state`;\n            const stateid_time = `${data.ainstance.join('.')}.Players` + `.${playername}.Time`;\n\n            const state_duration =\n                vis.states[`${stateid_duration}.val`] || vis.states[`${stateid_duration}.val`] === 0\n                    ? parseInt(vis.states[`${stateid_duration}.val`])\n                    : 0;\n            const state_state =\n                vis.states[`${stateid_state}.val`] || vis.states[`${stateid_state}.val`] === 0\n                    ? parseInt(vis.states[`${stateid_state}.val`])\n                    : 0;\n            const state_time =\n                vis.states[`${stateid_time}.val`] || vis.states[`${stateid_time}.val`] === 0\n                    ? parseInt(vis.states[`${stateid_time}.val`])\n                    : 0;\n\n            let width = state_duration == 0 ? 0 : $(`#${widgetID} div.playtimebar`).width();\n            if (state_state == 2) {\n                width = 0;\n            } //0 if player stop\n            if (vis.editMode) {\n                width = 50;\n            } else {\n                width = Math.floor((state_time / state_duration) * 100);\n            }\n            $(`#${widgetID} div.playtimebar`).width(`${width}%`);\n        },\n    },\n    string: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].string.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function () {\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(\n                            `${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.${data.playerattribute}`,\n                        );\n                    }\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n\n            this.setState(fdata);\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].string.setState(fdata);\n                }, 100);\n            }\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.${data.playerattribute}`;\n\n            const state = vis.states[`${stateid}.val`] ? vis.states[`${stateid}.val`] : '';\n            //if (vis.editMode) state = data.test_html || \"\";\n            const html_prepend = data.html_prepend || '';\n            const html_append = data.html_append || '';\n            $(`#${widgetID}`).html(html_prepend + state + html_append);\n        },\n    },\n    playlist: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].playlist.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            this.setState(fdata);\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: async function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const $div = $(`#${widgetID}`);\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].playlist.setState(fdata);\n                }, 100);\n            }\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            let result = await vis.binds['squeezeboxrpc'].getPlaylistData(ainstance.join('.'));\n            let playlist = result.result.playlists_loop;\n            let text = '';\n            text += `\n            <style>\n            #${widgetID} ul.plcontainer {\n                list-style-type: none;\n                padding-left: 0px;\n                margin: 0px;\n            }\n            #${widgetID} li.plentry {\n                cursor: pointer;\n                height: 1em;\n                margin: 5px 0px;\n            }\n            #${widgetID} li.plentry div {\n                text-overflow: ellipsis;\n                overflow: hidden;\n                white-space: nowrap;\n            }\n            #${widgetID} li.plrefresh {\n                width: 1em;\n                height: 1em;\n                margin: 5px 0px;\n            }\n            </style>\n            `;\n            text += '<ul class=\"plcontainer\">';\n            text +=\n                '<li class=\"plrefresh\"><div><svg focusable=\"false\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" data-testid=\"RefreshIcon\"><path fill=\"currentColor\" d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"></path></svg></div></li>';\n            for (let i = 0; i < playlist.length; i++) {\n                let pl = playlist[i];\n                text += `<li class=\"plentry\"><div class=\"pltext\" data-plid=\"${pl.id}\" data-pln=\"${playername}\" data-ins=\"${ainstance.join('.')}\" onclick=\"vis.binds.squeezeboxrpc.playlist.onclickplaylist(this,event)\">${pl.playlist}</div></li>`;\n            }\n            text += '</ul>';\n            $(`#${widgetID}`).html(text);\n            $(`#${widgetID} li.refresh`).click(\n                function (fdata) {\n                    vis.binds.squeezeboxrpc.playlist.setState(fdata);\n                }.bind(this, fdata),\n            );\n        },\n        onclickplaylist: function (el) {\n            const playlistid = el.dataset.plid || '';\n            const playername = el.dataset.pln || '';\n            const instance = el.dataset.ins || '';\n            const stateid = `${instance}.Players` + `.${playername}.cmdGeneral`;\n            vis.setValue(stateid, `\"playlistcontrol\",\"cmd:load\",\"playlist_id:${playlistid}\"`);\n        },\n        onclickrefresh: function (el) {\n            const playlistid = el.dataset.plid || '';\n            const playername = el.dataset.pln || '';\n            const instance = el.dataset.ins || '';\n            const stateid = `${instance}.Players` + `.${playername}.cmdGeneral`;\n            vis.setValue(stateid, `\"playlistcontrol\",\"cmd:load\",\"playlist_id:${playlistid}\"`);\n        },\n    },\n    number: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].number.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function () {\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(\n                            `${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.${data.playerattribute}`,\n                        );\n                    }\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n\n            this.setState(fdata);\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].number.setState(fdata);\n                }, 100);\n            }\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.${data.playerattribute}`;\n\n            let state = vis.states[`${stateid}.val`] ? vis.states[`${stateid}.val`] : '';\n            // if (vis.editMode) state = data.test_html || \"\";\n            state = parseFloat(state);\n            if (state === undefined || state === null || isNaN(state)) {\n                state = 0;\n            }\n            if (data.digits || data.digits !== '') {\n                state = state.toFixed(parseFloat(data.digits, 10));\n            }\n            if (data.is_tdp && data.is_tdp !== '') {\n                state = state.toString().split('.');\n                state[0] = state[0].replace(/\\d{1,3}(?=(\\d{3})+(?!\\d))/g, '$&,');\n                state = state.join('.');\n            }\n            if (data.is_comma && data.is_comma !== '') {\n                state = state\n                    .split('.')\n                    .map(e => e.replace(/,/g, '.'))\n                    .join(',');\n            }\n\n            const html_prepend = data.html_prepend || '';\n            const html_append = data.html_append || '';\n            $(`#${widgetID}`).html(html_prepend + state + html_append);\n        },\n    },\n    datetime: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].datetime.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function () {\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(\n                            `${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.${data.playerattribute}`,\n                        );\n                    }\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n\n            this.setState(fdata);\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].number.setState(fdata);\n                }, 100);\n            }\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.${data.playerattribute}`;\n\n            let state = vis.states[`${stateid}.val`] ? vis.states[`${stateid}.val`] : '';\n            //if (vis.editMode) state = data.test_html || \"\";\n            if (data.factor && data.factor !== '') {\n                state = state * data.factor;\n            }\n            const offset = 1000 * 60 * new Date(0).getTimezoneOffset();\n            state = new Date(offset + state);\n            if (isNaN(state)) {\n                state = '';\n            }\n            if (state instanceof Date) {\n                state = state.format(data.format);\n            }\n            const html_prepend = data.html_prepend || '';\n            const html_append = data.html_append || '';\n            $(`#${widgetID}`).html(html_prepend + state + html_append);\n        },\n    },\n    image: {\n        createWidget: function (widgetID, view, data, style) {\n            const $div = $(`#${widgetID}`);\n            if (!$div.length) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].image.createWidget(widgetID, view, data, style);\n                }, 100);\n            }\n\n            data = vis.views[view].widgets[widgetID].data;\n            style = vis.views[view].widgets[widgetID].style;\n\n            const ainstance = (data.ainstance = vis.binds['squeezeboxrpc'].checkAttributes($div, data.widgetPlayer));\n            if (!ainstance) {\n                return;\n            }\n\n            const fdata = { self: this, widgetID: widgetID, view: view, data: data, style: style };\n\n            vis.binds['squeezeboxrpc'].setPlayersChanged(\n                $div,\n                data.widgetPlayer,\n                fdata,\n                this.onChange.bind(fdata),\n                function () {\n                    const boundstates = [];\n                    const players = vis.binds['squeezeboxrpc'].getPlayerValues(data.widgetPlayer);\n                    for (let i = 0; i < players.length; i++) {\n                        boundstates.push(\n                            `${ainstance[0]}.${ainstance[1]}.Players.${players[i]}.${data.playerattribute}`,\n                        );\n                    }\n                    return boundstates;\n                },\n            );\n            vis.binds['squeezeboxrpc'].setChanged(data.widgetPlayer, fdata, this.setState.bind(fdata));\n            let imgstyle = 'width:100%;';\n            if (data.stretch) {\n                imgstyle += 'height:100%;';\n            }\n            let text = '';\n            text += data.html_prepend || '';\n            text += `<img style=\"${imgstyle}\"></img> \\n`;\n            text += data.html_append || '';\n            $(`#${widgetID}`).html(text);\n            this.setState(fdata);\n        },\n        onChange: function () {\n            this.self.setState(this);\n        },\n        setState: function (fdata) {\n            const data = fdata.data;\n            const widgetID = fdata.widgetID;\n            const playername = vis.binds['squeezeboxrpc'].getPlayerName(data.widgetPlayer);\n            if (!playername) {\n                return setTimeout(function () {\n                    vis.binds['squeezeboxrpc'].image.setState(fdata);\n                }, 100);\n            }\n            const stateid = `${data.ainstance.join('.')}.Players` + `.${playername}.${data.playerattribute}`;\n\n            const state = vis.states[`${stateid}.val`] ? vis.states[`${stateid}.val`] : '';\n            // if (vis.editMode) state = data.test_html || \"\";\n            $(`#${widgetID} img`).attr('src', state);\n        },\n    },\n    redrawInspectWidgets: function (view) {\n        let $edit, id, start, end, sel;\n        if (window.Selection) {\n            if (window.getSelection()) {\n                sel = window.getSelection();\n            }\n            if (sel.anchorNode) {\n                $edit = $(sel.anchorNode).find('input, textarea').first();\n                id = $edit.attr('id');\n                start = $edit.prop('selectionStart');\n                end = $edit.prop('selectionEnd');\n            }\n        }\n        vis.inspectWidgets(view, view);\n        $edit = $(`#${id}`);\n        if ($edit) {\n            $edit.focus();\n            $edit.prop({\n                selectionStart: start,\n                selectionEnd: end,\n            });\n        }\n    },\n    checkViewIndex: function (widgetID, view, viewindex) {\n        let $edit;\n        const data = vis.views[view].widgets[widgetID].data;\n        const viewindexcheck = data.viewindexcheck;\n\n        if (!viewindex || viewindex.trim() == '') {\n            viewindex = vis.binds['squeezeboxrpc'][data.functionname].getViewindex(viewindexcheck).join(', ');\n        }\n\n        viewindex = viewindex.split(',').map(function (item) {\n            return item.trim();\n        });\n\n        viewindex = vis.binds['squeezeboxrpc'][data.functionname].checkViewindexExist(viewindex, viewindexcheck);\n\n        if (viewindex.length > viewindexcheck.length) {\n            viewindex = viewindex.slice(0, viewindexcheck.length);\n        }\n        data.viewindex = viewindex.join(', ');\n        $edit = $('#inspect_viewindex');\n        let start = $edit.prop('selectionStart');\n        let end = $edit.prop('selectionEnd');\n        if (start > data.viewindex.length) {\n            start = data.viewindex.length;\n        }\n        if (end > data.viewindex.length) {\n            end = data.viewindex.length;\n        }\n        $edit.val(data.viewindex);\n        $edit = $('#inspect_viewindex');\n        if ($edit) {\n            $edit.focus();\n            $edit.prop({\n                selectionStart: start,\n                selectionEnd: end,\n            });\n        }\n        return false;\n    },\n    getPlayerWidgetType: function (view, playerWidgetID) {\n        return vis.views[view].widgets[playerWidgetID].data.formattype || '';\n    },\n    checkAttributes: function ($div, widgetPlayer) {\n        if (!widgetPlayer) {\n            $div.html('Please select a player widget');\n            return false;\n        }\n        if (!vis.widgets[widgetPlayer].data.ainstance) {\n            $div.html('Please select an instance at the playerwidget');\n            return false;\n        }\n        const ainstance = vis.widgets[widgetPlayer].data.ainstance.split('.');\n        if (!ainstance || ainstance[0] != 'squeezeboxrpc') {\n            $div.html('Please select an instance at the playerwidget');\n            return false;\n        }\n        return ainstance;\n    },\n    setChanged: function (widgetPlayer, fdata) {\n        $('.vis-view')\n            .off(`change.${fdata.widgetID}`)\n            .on(`change.${fdata.widgetID}`, `#${widgetPlayer}`, fdata, function () {\n                const self = fdata.self;\n                self.setState(fdata);\n            });\n    },\n    setPlayersChanged: function ($div, widgetPlayer, fdata, onChange_callback, boundstates_callback) {\n        $('.vis-view')\n            .off(`playerschanged.${fdata.widgetID}`)\n            .on(\n                `playerschanged.${fdata.widgetID}`,\n                `#${widgetPlayer}`,\n                fdata,\n                function (event) {\n                    const fdata = event.data;\n                    const boundstates = boundstates_callback.apply(this, [fdata]);\n                    if (boundstates) {\n                        vis.binds['squeezeboxrpc'].bindStates($div, boundstates, onChange_callback, fdata);\n                    }\n                }.bind(this),\n            );\n    },\n    bindStates: function (elem, bound, change_callback, fdata) {\n        const $div = $(elem);\n        const boundstates = $div.data('bound');\n        if (boundstates) {\n            for (let i = 0; i < boundstates.length; i++) {\n                vis.states.unbind(boundstates[i], change_callback);\n            }\n        }\n        $div.data('bound', null);\n        $div.data('bindHandler', null);\n\n        vis.conn.gettingStates = 0;\n        vis.conn.getStates(\n            bound,\n            function (error, states) {\n                vis.updateStates(states);\n                vis.conn.subscribe(bound);\n                for (let i = 0; i < bound.length; i++) {\n                    bound[i] = `${bound[i]}.val`;\n                    vis.states.bind(bound[i], change_callback);\n                }\n                $div.data('bound', bound);\n                $div.data('bindHandler', change_callback);\n            }.bind({ fdata, change_callback }),\n        );\n    },\n    attrSelect: function (wid_attr, options) {\n        if (wid_attr === 'widgetPlayer') {\n            options = this.findPlayerWidgets();\n        }\n        if (wid_attr === 'widgetFavorites') {\n            options = this.findFavoritesWidgets();\n        }\n        let html = '';\n        for (let i = 0; i < options.length; i++) {\n            html += `<option value=\"${options[i]}\">${options[i]}</option>`;\n        }\n        const line = {\n            input: `<select type=\"text\" id=\"inspect_${wid_attr}\">${html}</select>`,\n        };\n        return line;\n    },\n    playerAttrSelect: function (wid_attr) {\n        let html = '';\n        const playerattributes = vis.binds['squeezeboxrpc'].playerattributes.sort();\n        for (let i = 0; i < playerattributes.length; i++) {\n            html += `<option value=\"${playerattributes[i]}\">${playerattributes[i]}</option>`;\n        }\n        const line = {\n            input: `<select type=\"text\" id=\"inspect_${wid_attr}\">${html}</select>`,\n        };\n        return line;\n    },\n    findPlayerWidgets: function () {\n        const widgets = vis.views[vis.activeView].widgets;\n        const keys = Object.keys(widgets);\n        const result = [];\n        for (let i = 0; i < keys.length; i++) {\n            if (widgets[keys[i]].tpl == 'tplSqueezeboxrpcPlayer') {\n                result.push(keys[i]);\n            }\n        }\n        return result;\n    },\n    findFavoritesWidgets: function () {\n        const widgets = vis.views[vis.activeView].widgets;\n        const keys = Object.keys(widgets);\n        const result = [];\n        for (let i = 0; i < keys.length; i++) {\n            if (widgets[keys[i]].tpl == 'tplSqueezeboxrpcFavorites') {\n                result.push(keys[i]);\n            }\n        }\n        return result;\n    },\n    getPlayerValues: function (widgetPlayer) {\n        return $(`input[name=${widgetPlayer}], #${widgetPlayer} option`)\n            .toArray()\n            .reduce(function (acc, cur) {\n                if ($(cur).val()) {\n                    acc.push($(cur).val());\n                }\n                return acc;\n            }, []);\n    },\n    getPlayerName: function (widgetPlayer) {\n        return $(`input[name=${widgetPlayer}]:checked, #${widgetPlayer} option:checked`).val();\n    },\n    getPlayerNameAsync: async function (widgetPlayer) {\n        return new Promise((resolve, reject) => {\n            (async () => {\n                let i = 0;\n                while (i < 1000) {\n                    let playername = this.getPlayerName(widgetPlayer);\n                    if (!playername) {\n                        await new Promise(r => setTimeout(r, 100));\n                    } else {\n                        resolve(playername);\n                        return;\n                    }\n                    i++;\n                    console.log(i);\n                }\n                reject();\n            })();\n        });\n    },\n    onHorizChange: function (widgetID, view, newId) {\n        const data = vis.views[view].widgets[widgetID].data;\n        if (newId == 'vertical') {\n            data.segheight = '100%';\n            data.segwidth = '100%';\n        } else {\n            data.segheight = '20px';\n            data.segwidth = '20px';\n        }\n        return true;\n    },\n    editDimension: function (widgetID, view, newId, attr) {\n        if (newId && typeof newId !== 'object') {\n            const e = newId.substring(newId.length - 2);\n            if (e !== 'px' && e !== 'em' && newId[newId.length - 1] !== '%') {\n                vis.views[view].widgets[widgetID].data[attr] = `${newId}px`;\n            }\n        }\n    },\n    browsesendToAsync: async function (instance, command, sendData) {\n        let result = await vis.binds['squeezeboxrpc'].sendToAsync(instance, command, sendData);\n        if (vis.binds['squeezeboxrpc'].fetchResults) {\n            console.debug('debugbrowsersendtoasync', {\n                debug: 'debug data',\n                instance: instance,\n                command: command,\n                sendData: sendData,\n                result: result,\n            });\n        }\n        return result;\n    },\n    sendToAsync: async function (instance, command, sendData) {\n        console.log(`sendToAsync ${command} ${JSON.stringify(sendData)}`);\n        return new Promise((resolve /* , reject */) => {\n            // eslint-disable-next-line no-useless-catch\n            try {\n                vis.conn.sendTo(instance, command, sendData, function (receiveData) {\n                    resolve(receiveData);\n                });\n            } catch (error) {\n                throw error;\n                //reject(error);\n            }\n        });\n    },\n    getPlaylistData: async function (instance) {\n        console.log(`getPlaylistData`);\n        const data = {\n            playerid: '',\n            cmdArray: ['playlists', '0', '999', 'tags:us'],\n        };\n        return await this.sendToAsync(instance, 'cmdGeneral', data);\n    },\n    getPlayerID: async function (state) {\n        console.log(`getPlayerID`);\n        return new Promise((resolve, reject) => {\n            try {\n                vis.conn.gettingStates = 0;\n                vis.conn.getStates([state], function (error, states) {\n                    resolve(states[state].val);\n                });\n            } catch (error) {\n                reject(error);\n            }\n        });\n    },\n};\nvis.binds['squeezeboxrpc'].showVersion();\n//function css() {} // remove tagged temlate string error message, tagging is needed to format the css code\n// function html() {} // remove tagged temlate string error message, tagging is needed to format the html code\n", "/* xeslint no-extend-native: 0 */\r\n/* globals navigator */\r\n(function () {\r\n  // Defining locale\r\n  Date.shortMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n  Date.longMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  Date.shortDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  Date.longDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  // Defining patterns\r\n  const replaceChars = {\r\n    // Day\r\n    d: function () { const d = this.getDate(); return (d < 10 ? \"0\" : \"\") + d; },\r\n    D: function () { return Date.shortDays[this.getDay()]; },\r\n    j: function () { return this.getDate(); },\r\n    l: function () { return Date.longDays[this.getDay()]; },\r\n    N: function () { const N = this.getDay(); return (N === 0 ? 7 : N); },\r\n    S: function () { const S = this.getDate(); return (S % 10 === 1 && S !== 11 ? \"st\" : (S % 10 === 2 && S !== 12 ? \"nd\" : (S % 10 === 3 && S !== 13 ? \"rd\" : \"th\"))); },\r\n    w: function () { return this.getDay(); },\r\n    z: function () { const d = new Date(this.getFullYear(), 0, 1); return Math.ceil((this - d) / 86400000); },\r\n    // Week\r\n    W: function () {\r\n      const target = new Date(this.valueOf());\r\n      const dayNr = (this.getDay() + 6) % 7;\r\n      target.setDate(target.getDate() - dayNr + 3);\r\n      const firstThursday = target.valueOf();\r\n      target.setMonth(0, 1);\r\n      if (target.getDay() !== 4) {\r\n        target.setMonth(0, 1 + ((4 - target.getDay()) + 7) % 7);\r\n      }\r\n      const retVal = 1 + Math.ceil((firstThursday - target) / 604800000);\r\n\r\n      return (retVal < 10 ? \"0\" + retVal : retVal);\r\n    },\r\n    // Month\r\n    F: function () { return Date.longMonths[this.getMonth()]; },\r\n    m: function () { const m = this.getMonth(); return (m < 9 ? \"0\" : \"\") + (m + 1); },\r\n    M: function () { return Date.shortMonths[this.getMonth()]; },\r\n    n: function () { return this.getMonth() + 1; },\r\n    t: function () {\r\n      let year = this.getFullYear();\r\n      let nextMonth = this.getMonth() + 1;\r\n      if (nextMonth === 12) {\r\n        year = year++;\r\n        nextMonth = 0;\r\n      }\r\n      return new Date(year, nextMonth, 0).getDate();\r\n    },\r\n    // Year\r\n    L: function () { const L = this.getFullYear(); return (L % 400 === 0 || (L % 100 !== 0 && L % 4 === 0)); },\r\n    o: function () { const d = new Date(this.valueOf()); d.setDate(d.getDate() - ((this.getDay() + 6) % 7) + 3); return d.getFullYear(); },\r\n    Y: function () { return this.getFullYear(); },\r\n    y: function () { return (\"\" + this.getFullYear()).substr(2); },\r\n    // Time\r\n    a: function () { return this.getHours() < 12 ? \"am\" : \"pm\"; },\r\n    A: function () { return this.getHours() < 12 ? \"AM\" : \"PM\"; },\r\n    B: function () { return Math.floor((((this.getUTCHours() + 1) % 24) + this.getUTCMinutes() / 60 + this.getUTCSeconds() / 3600) * 1000 / 24); },\r\n    g: function () { return this.getHours() % 12 || 12; },\r\n    G: function () { return this.getHours(); },\r\n    h: function () { const h = this.getHours(); return ((h % 12 || 12) < 10 ? \"0\" : \"\") + (h % 12 || 12); },\r\n    H: function () { const H = this.getHours(); return (H < 10 ? \"0\" : \"\") + H; },\r\n    i: function () { const i = this.getMinutes(); return (i < 10 ? \"0\" : \"\") + i; },\r\n    s: function () { const s = this.getSeconds(); return (s < 10 ? \"0\" : \"\") + s; },\r\n    v: function () { const v = this.getMilliseconds(); return (v < 10 ? \"00\" : (v < 100 ? \"0\" : \"\")) + v; },\r\n    // Timezone\r\n    e: function () { return Intl.DateTimeFormat().resolvedOptions().timeZone; },\r\n    I: function () {\r\n      let DST = null;\r\n      for (let i = 0; i < 12; ++i) {\r\n        const d = new Date(this.getFullYear(), i, 1);\r\n        const offset = d.getTimezoneOffset();\r\n\r\n        if (DST === null) DST = offset;\r\n        else if (offset < DST) { DST = offset; break; } else if (offset > DST) break;\r\n      }\r\n      return (this.getTimezoneOffset() === DST) | 0;\r\n    },\r\n    O: function () { const O = this.getTimezoneOffset(); return (-O < 0 ? \"-\" : \"+\") + (Math.abs(O / 60) < 10 ? \"0\" : \"\") + Math.floor(Math.abs(O / 60)) + (Math.abs(O % 60) === 0 ? \"00\" : ((Math.abs(O % 60) < 10 ? \"0\" : \"\")) + (Math.abs(O % 60))); },\r\n    P: function () { const P = this.getTimezoneOffset(); return (-P < 0 ? \"-\" : \"+\") + (Math.abs(P / 60) < 10 ? \"0\" : \"\") + Math.floor(Math.abs(P / 60)) + \":\" + (Math.abs(P % 60) === 0 ? \"00\" : ((Math.abs(P % 60) < 10 ? \"0\" : \"\")) + (Math.abs(P % 60))); },\r\n    T: function () { const tz = this.toLocaleTimeString(navigator.language, { timeZoneName: \"short\" }).split(\" \"); return tz[tz.length - 1]; },\r\n    Z: function () { return -this.getTimezoneOffset() * 60; },\r\n    // Full Date/Time\r\n    c: function () { return this.format(\"Y-m-d\\\\TH:i:sP\"); },\r\n    r: function () { return this.toString(); },\r\n    U: function () { return Math.floor(this.getTime() / 1000); }\r\n  };\r\n\r\n  // Simulates PHP's date function\r\n  Date.prototype.format = function (format) {\r\n    const date = this;\r\n    return format.replace(/(\\\\?)(.)/g, function (_, esc, chr) {\r\n      return (esc === \"\" && replaceChars[chr]) ? replaceChars[chr].call(date) : chr;\r\n    });\r\n  };\r\n}).call(this);", "import './sbClasses.js';\nimport './squeezeboxrpc.js';\nimport './date.format.js';\nimport './textImage.js';\n"],
  "mappings": "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",
  "names": ["p", "i", "_a", "fdata", "data", "widgetID", "view", "style", "players", "playername", "stateid1", "stateid2", "state1", "state2", "state"]
}
